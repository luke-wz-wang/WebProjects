{"ast":null,"code":"var _jsxFileName = \"/Users/sinzevivens/Documents/GitHub/mpcs52553/fp/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Table from \"react-bootstrap/Table\";\nimport ParticlesBg from \"particles-bg\";\nimport CurrentStocks from \"./CurrentStocks\";\nimport StockMarket from \"./StockMarket\";\nimport \"./App.css\";\nimport StarfieldAnimation from \"react-starfield-animation\";\n\nclass Star extends Component {\n  render() {\n    return React.createElement(StarfieldAnimation, {\n      style: {\n        position: \"absolute\",\n        width: \"100%\",\n        height: \"600px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass Asteroid extends Component {\n  render() {\n    var str = \"\";\n    var is_precent = 0.3;\n\n    if (this.props.asteriod.is_hazardous) {\n      str = \"Yes\";\n      is_precent = 0.8;\n    } else {\n      str = \"No\";\n    }\n\n    var dia_precent = (this.props.asteriod.estimated_diameter_max - this.props.asteriod.min_diameter + 0.01) / (this.props.asteriod.max_diameter - this.props.asteriod.min_diameter);\n    var dis_percent = 1 - (this.props.asteriod.miss_distance - this.props.asteriod.min_dis) / (this.props.asteriod.max_dis - this.props.asteriod.min_dis);\n    var tdStyle = {\n      background: \"RGB(0,255,255,\" + dia_precent + \")\"\n    };\n    var isStyle = {\n      background: \"RGB(255,0,0,\" + is_precent + \")\"\n    };\n    var disStyle = {\n      background: \"RGB(255,0,255,\" + dis_percent + \")\"\n    };\n    return React.createElement(\"tr\", {\n      key: this.props.asteriod.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.props.asteriod.date), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.props.asteriod.name), React.createElement(\"td\", {\n      style: tdStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.props.asteriod.estimated_diameter_max), React.createElement(\"td\", {\n      style: disStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.props.asteriod.miss_distance), React.createElement(\"td\", {\n      style: isStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, str));\n  }\n\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.recommendShare = (symbol, shareNum) => {\n      console.log(\"here recommendshare\");\n      console.log(symbol);\n      console.log(shareNum);\n      var market = this.state.market,\n          hold = this.state.hold;\n      var newShare = {};\n\n      for (var i = 0; i < this.state.market.length; i++) {\n        if (this.state.market[i][\"symbol\"] === symbol) {\n          newShare[\"symbol\"] = symbol;\n          newShare[\"price\"] = this.state.market[i][\"price\"];\n          newShare[\"numOfShares\"] = shareNum;\n          newShare[\"company\"] = this.state.market[i][\"company\"];\n          newShare[\"totalValue\"] = parseFloat(shareNum) * parseFloat(this.state.market[i][\"price\"]); //market.splice(i, 1);\n        }\n      }\n\n      hold.push(newShare); //this.setState({ \"market \": market });\n\n      localStorage.setItem(\"market \", JSON.stringify(market));\n      this.setState({\n        hold: hold\n      });\n      localStorage.setItem(\"hold\", JSON.stringify(hold));\n      var totalShareValue = parseFloat(this.state.totalShareValue) + parseFloat(newShare[\"totalValue\"]);\n      totalShareValue = totalShareValue.toFixed(2);\n      this.setState({\n        totalShareValue: totalShareValue\n      });\n      localStorage.setItem(\"totalShareValue\", totalShareValue.toString());\n    };\n\n    this.urlForStockInfo = stockSymbol => {\n      const api_key_param = \"token=pk_0450ab0ad32942a480c3e7330fd353c5 \";\n      const base_url = \"https://cloud.iexapis.com/stable/stock/\";\n      const api_url = `${base_url}${stockSymbol}/quote?${api_key_param}`;\n      return api_url;\n    };\n\n    this.state = {\n      hold: [],\n      market: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(localStorage.getItem(\"market\"));\n    console.log(localStorage.getItem(\"market\").length);\n\n    if (localStorage.getItem(\"market\").length === 2) {\n      console.log(\"market is null\");\n      const symbols = [\"CSCO\", \"ADBE\", \"NEW\", \"BAC\", \"A\", \"F\", \"C\", \"D\", \"X\", \"O\", \"K\", \"I\", \"V\", \"ATVI\", \"TXN\", \"AA\", \"DIS\", \"AMZN\", \"GOOGL\", \"XOM\", \"JNJ\", \"GE\", \"REAL\", \"MMM\"];\n      var all = [];\n\n      for (var i = 0; i < symbols.length; i++) {\n        const url = this.urlForStockInfo(symbols[i]);\n        fetch(url).then(r => r.json()).then(data => {\n          console.log(\"here is data\");\n          console.log(data);\n          var stocks = {};\n          stocks[\"symbol\"] = data.symbol;\n          stocks[\"company\"] = data.companyName;\n          stocks[\"numOfShares\"] = 0;\n          stocks[\"price\"] = data.latestPrice;\n          stocks[\"totalValue\"] = 0;\n          all.push(stocks);\n          this.setState({\n            market: all\n          });\n        });\n      }\n\n      localStorage.setItem(\"market\", JSON.stringify(all));\n      this.setState({\n        hold: JSON.parse(localStorage.getItem(\"hold\"))\n      });\n    } else {\n      this.setState({\n        hold: JSON.parse(localStorage.getItem(\"hold\"))\n      });\n      this.setState({\n        market: JSON.parse(localStorage.getItem(\"market\"))\n      });\n      this.setState({\n        totalShareValue: parseFloat(localStorage.getItem(\"totalShareValue\"))\n      });\n    }\n  }\n\n  render() {\n    let config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-40, 40],\n      alpha: [0.6, 0],\n      scale: [0.1, 0.4],\n      position: \"all\",\n      color: [\"random\", \"#ff0000\"],\n      cross: \"dead\",\n      // emitter: \"follow\",\n      random: 15\n    };\n\n    if (Math.random() > 0.85) {\n      config = Object.assign(config, {\n        onParticleUpdate: (ctx, particle) => {\n          ctx.beginPath();\n          ctx.rect(particle.p.x, particle.p.y, particle.radius * 2, particle.radius * 2);\n          ctx.fillStyle = particle.color;\n          ctx.fill();\n          ctx.closePath();\n        }\n      });\n    }\n\n    const recommends = this.state.market.map(stock => {\n      return React.createElement(StockMarket, {\n        stock: stock,\n        purchase: this.recommendShare,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(ParticlesBg, {\n      type: \"custom\",\n      config: config,\n      bg: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"purchase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"title\",\n      style: {\n        color: \"white\",\n        textAlign: \"left\",\n        width: \"500px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Recommended Stock\"), React.createElement(\"table\", {\n      id: \"recommend\",\n      className: \"table table-fixed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      id: \"symbol\",\n      style: {\n        width: \"15%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Symbol\"), React.createElement(\"th\", {\n      style: {\n        width: \"45%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Company Name\"), React.createElement(\"th\", {\n      style: {\n        width: \"20%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Market Price\"), React.createElement(\"th\", {\n      style: {\n        width: \"10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Amount\"), React.createElement(\"th\", {\n      id: \"submit\",\n      style: {\n        width: \"10%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Operation\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, recommends)))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sinzevivens/Documents/GitHub/mpcs52553/fp/src/App.js"],"names":["React","Component","Table","ParticlesBg","CurrentStocks","StockMarket","StarfieldAnimation","Star","render","position","width","height","Asteroid","str","is_precent","props","asteriod","is_hazardous","dia_precent","estimated_diameter_max","min_diameter","max_diameter","dis_percent","miss_distance","min_dis","max_dis","tdStyle","background","isStyle","disStyle","name","date","App","constructor","recommendShare","symbol","shareNum","console","log","market","state","hold","newShare","i","length","parseFloat","push","localStorage","setItem","JSON","stringify","setState","totalShareValue","toFixed","toString","urlForStockInfo","stockSymbol","api_key_param","base_url","api_url","componentDidMount","getItem","symbols","all","url","fetch","then","r","json","data","stocks","companyName","latestPrice","parse","config","num","rps","radius","life","v","tha","alpha","scale","color","cross","random","Math","Object","assign","onParticleUpdate","ctx","particle","beginPath","rect","p","x","y","fillStyle","fill","closePath","recommends","map","stock","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Table from \"react-bootstrap/Table\";\nimport ParticlesBg from \"particles-bg\";\nimport CurrentStocks from \"./CurrentStocks\";\nimport StockMarket from \"./StockMarket\";\n\nimport \"./App.css\";\n\nimport StarfieldAnimation from \"react-starfield-animation\";\n\nclass Star extends Component {\n  render() {\n    return (\n      <StarfieldAnimation\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"600px\"\n        }}\n      />\n    );\n  }\n}\n\nclass Asteroid extends Component {\n  render() {\n    var str = \"\";\n    var is_precent = 0.3;\n    if (this.props.asteriod.is_hazardous) {\n      str = \"Yes\";\n      is_precent = 0.8;\n    } else {\n      str = \"No\";\n    }\n\n    var dia_precent =\n      (this.props.asteriod.estimated_diameter_max -\n        this.props.asteriod.min_diameter +\n        0.01) /\n      (this.props.asteriod.max_diameter - this.props.asteriod.min_diameter);\n\n    var dis_percent =\n      1 -\n      (this.props.asteriod.miss_distance - this.props.asteriod.min_dis) /\n        (this.props.asteriod.max_dis - this.props.asteriod.min_dis);\n\n    var tdStyle = {\n      background: \"RGB(0,255,255,\" + dia_precent + \")\"\n    };\n\n    var isStyle = {\n      background: \"RGB(255,0,0,\" + is_precent + \")\"\n    };\n\n    var disStyle = {\n      background: \"RGB(255,0,255,\" + dis_percent + \")\"\n    };\n\n    return (\n      <tr key={this.props.asteriod.name}>\n        <td>{this.props.asteriod.date}</td>\n        <td>{this.props.asteriod.name}</td>\n        <td style={tdStyle}>{this.props.asteriod.estimated_diameter_max}</td>\n        <td style={disStyle}>{this.props.asteriod.miss_distance}</td>\n        <td style={isStyle}>{str}</td>\n      </tr>\n    );\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hold: [],\n      market: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(localStorage.getItem(\"market\"));\n    console.log(localStorage.getItem(\"market\").length);\n    if (localStorage.getItem(\"market\").length === 2) {\n      console.log(\"market is null\");\n      const symbols = [\n        \"CSCO\",\n        \"ADBE\",\n        \"NEW\",\n        \"BAC\",\n        \"A\",\n        \"F\",\n        \"C\",\n        \"D\",\n        \"X\",\n        \"O\",\n        \"K\",\n        \"I\",\n        \"V\",\n        \"ATVI\",\n        \"TXN\",\n        \"AA\",\n        \"DIS\",\n        \"AMZN\",\n        \"GOOGL\",\n        \"XOM\",\n        \"JNJ\",\n        \"GE\",\n        \"REAL\",\n        \"MMM\"\n      ];\n      var all = [];\n      for (var i = 0; i < symbols.length; i++) {\n        const url = this.urlForStockInfo(symbols[i]);\n        fetch(url)\n          .then(r => r.json())\n          .then(data => {\n            console.log(\"here is data\");\n            console.log(data);\n            var stocks = {};\n            stocks[\"symbol\"] = data.symbol;\n            stocks[\"company\"] = data.companyName;\n            stocks[\"numOfShares\"] = 0;\n            stocks[\"price\"] = data.latestPrice;\n            stocks[\"totalValue\"] = 0;\n            all.push(stocks);\n            this.setState({ market: all });\n          });\n      }\n      localStorage.setItem(\"market\", JSON.stringify(all));\n      this.setState({\n        hold: JSON.parse(localStorage.getItem(\"hold\"))\n      });\n    } else {\n      this.setState({\n        hold: JSON.parse(localStorage.getItem(\"hold\"))\n      });\n      this.setState({\n        market: JSON.parse(localStorage.getItem(\"market\"))\n      });\n      this.setState({\n        totalShareValue: parseFloat(localStorage.getItem(\"totalShareValue\"))\n      });\n    }\n  }\n\n  recommendShare = (symbol, shareNum) => {\n    console.log(\"here recommendshare\");\n    console.log(symbol);\n    console.log(shareNum);\n    var market = this.state.market,\n      hold = this.state.hold;\n    var newShare = {};\n    for (var i = 0; i < this.state.market.length; i++) {\n      if (this.state.market[i][\"symbol\"] === symbol) {\n        newShare[\"symbol\"] = symbol;\n        newShare[\"price\"] = this.state.market[i][\"price\"];\n        newShare[\"numOfShares\"] = shareNum;\n        newShare[\"company\"] = this.state.market[i][\"company\"];\n        newShare[\"totalValue\"] =\n          parseFloat(shareNum) * parseFloat(this.state.market[i][\"price\"]);\n        //market.splice(i, 1);\n      }\n    }\n    hold.push(newShare);\n    //this.setState({ \"market \": market });\n    localStorage.setItem(\"market \", JSON.stringify(market));\n    this.setState({ hold: hold });\n    localStorage.setItem(\"hold\", JSON.stringify(hold));\n    var totalShareValue =\n      parseFloat(this.state.totalShareValue) +\n      parseFloat(newShare[\"totalValue\"]);\n    totalShareValue = totalShareValue.toFixed(2);\n    this.setState({ totalShareValue: totalShareValue });\n    localStorage.setItem(\"totalShareValue\", totalShareValue.toString());\n  };\n\n  render() {\n    let config = {\n      num: [4, 7],\n      rps: 0.1,\n      radius: [5, 40],\n      life: [1.5, 3],\n      v: [2, 3],\n      tha: [-40, 40],\n      alpha: [0.6, 0],\n      scale: [0.1, 0.4],\n      position: \"all\",\n      color: [\"random\", \"#ff0000\"],\n      cross: \"dead\",\n      // emitter: \"follow\",\n      random: 15\n    };\n\n    if (Math.random() > 0.85) {\n      config = Object.assign(config, {\n        onParticleUpdate: (ctx, particle) => {\n          ctx.beginPath();\n          ctx.rect(\n            particle.p.x,\n            particle.p.y,\n            particle.radius * 2,\n            particle.radius * 2\n          );\n          ctx.fillStyle = particle.color;\n          ctx.fill();\n          ctx.closePath();\n        }\n      });\n    }\n\n    const recommends = this.state.market.map(stock => {\n      return <StockMarket stock={stock} purchase={this.recommendShare} />;\n    });\n\n    return (\n      <div className=\"container\">\n        <ParticlesBg type=\"custom\" config={config} bg={true} />\n\n        <div className=\"content\">\n          <div className=\"purchase\">\n            <div\n              id=\"title\"\n              style={{ color: \"white\", textAlign: \"left\", width: \"500px\" }}\n            >\n              Recommended Stock\n            </div>\n            <table id=\"recommend\" className=\"table table-fixed\">\n              <thead>\n                <tr>\n                  <th id=\"symbol\" style={{ width: \"15%\" }}>\n                    Symbol\n                  </th>\n                  <th style={{ width: \"45%\" }}>Company Name</th>\n                  <th style={{ width: \"20%\" }}>Market Price</th>\n                  <th style={{ width: \"10%\" }}>Amount</th>\n                  <th id=\"submit\" style={{ width: \"10%\" }}>\n                    Operation\n                  </th>\n                </tr>\n              </thead>\n              <tbody>{recommends}</tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  urlForStockInfo = stockSymbol => {\n    const api_key_param = \"token=pk_0450ab0ad32942a480c3e7330fd353c5 \";\n    const base_url = \"https://cloud.iexapis.com/stable/stock/\";\n    const api_url = `${base_url}${stockSymbol}/quote?${api_key_param}`;\n    return api_url;\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}