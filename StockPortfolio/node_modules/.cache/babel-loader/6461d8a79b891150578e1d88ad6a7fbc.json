{"ast":null,"code":"var _jsxFileName = \"/Users/sinzevivens/Documents/GitHub/week7/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Table from \"react-bootstrap/Button\";\nimport \"./App.css\";\n\nclass PictureOfDay extends Component {\n  render() {\n    console.log(this.props);\n    console.log(\"what i need\");\n    console.log(this.props.img.url);\n\n    if (!this.props) {\n      return null;\n    }\n\n    if (new String(this.props.img.type).valueOf() == new String(\"video\").valueOf()) {\n      console.log(\"is a video\");\n      return React.createElement(\"div\", {\n        id: \"video\",\n        className: \"header row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header-img \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"iframe\", {\n        width: \"420\",\n        height: \"315\",\n        src: this.props.img.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"video-text\",\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        id: \"video-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.props.img.title), React.createElement(\"article\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.props.img.explanation)));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header-img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.img,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })));\n  }\n\n}\n\nclass MovieDetail extends Component {\n  render() {\n    if (!this.props.movie) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      key: this.props.movie.title,\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: `http://image.tmdb.org/t/p/w185/${this.props.movie.poster_path}`,\n      className: \"card-img-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.props.movie.title), React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.props.movie.overview))));\n  }\n\n}\n\nclass Asteroid extends Component {\n  render() {\n    return React.createElement(\"tr\", {\n      key: this.props.asteriod.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.props.asteriod.date), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.props.asteriod.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.props.asteriod.estimated_diameter_max), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.props.asteriod.miss_distance));\n  }\n\n}\n\nclass Poster extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      key: this.props.movie.title,\n      className: \"col-3 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      onMouseEnter: e => {\n        this.props.whenClicked(this.props.movie);\n      },\n      src: `http://image.tmdb.org/t/p/w185/${this.props.movie.poster_path}`,\n      className: \"img-fluid\",\n      alt: `Poster for ${this.props.movie.title}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.props.movie.release_date.substr(0, 4)));\n  }\n\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePosterClick = movie => {\n      this.setState({\n        selectedMovie: movie\n      });\n    };\n\n    this.handleNowPlayingClick = e => {\n      e.preventDefault();\n      const url = this.urlForTMDB(\"now_playing\");\n      fetch(url).then(r => r.json()).then(data => {\n        console.log(data);\n        this.setState({\n          listOfMovies: data.results\n        }); // this.state.listOfMovies = data.results\n      });\n    };\n\n    this.handleTopRatedClick = e => {\n      e.preventDefault();\n      const url = this.urlForTMDB(\"top_rated\");\n      fetch(url).then(r => r.json()).then(data => {\n        console.log(data);\n        this.setState({\n          listOfMovies: data.results\n        }); // this.state.listOfMovies = data.results\n      });\n    };\n\n    this.handleMaxDiameterClick = e => {\n      e.preventDefault();\n      var today = new Date();\n      var dd = String(today.getDate()).padStart(2, \"0\");\n      var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n      var yyyy = today.getFullYear();\n      today = yyyy + \"-\" + mm + \"-\" + dd;\n      var end_day = new Date();\n      end_day.setDate(end_day.getDate() + 6);\n      var edd = String(end_day.getDate()).padStart(2, \"0\");\n      var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n      var eyyyy = end_day.getFullYear();\n      end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n      const url_aster_all = this.urlForAsterInfo(today, end_day);\n      fetch(url_aster_all).then(r => r.json()).then(data => {\n        var asters = {\n          info: []\n        };\n        var j = 0;\n\n        while (j < 7) {\n          var end_day = new Date();\n          end_day.setDate(end_day.getDate() + j);\n          var edd = String(end_day.getDate()).padStart(2, \"0\");\n          var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n          var eyyyy = end_day.getFullYear();\n          end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n\n          for (var i in data.near_earth_objects[end_day]) {\n            var item = data.near_earth_objects[end_day][i];\n            asters.info.push({\n              date: end_day,\n              name: item.name.substr(1, item.name.length - 2),\n              estimated_diameter_max: item.estimated_diameter.meters.estimated_diameter_max,\n              is_hazardous: item.is_potentially_hazardous_asteroid,\n              close_approach_data: item.close_approach_data,\n              miss_distance: item.close_approach_data[\"0\"].miss_distance.kilometers\n            });\n          }\n\n          j = j + 1;\n        }\n\n        asters.info.sort(this.compareMaxDiameter);\n        var topTen = {\n          info: []\n        };\n        var cnt = 0;\n        console.log(asters);\n\n        for (var i in asters.info) {\n          var item = asters.info[i];\n          topTen.info.push(asters.info[i]);\n          cnt = cnt + 1;\n\n          if (cnt >= 10) {\n            break;\n          }\n        } //console.log(asters.info[item]);\n        //console.log(this.flatten(data[\"near_earth_objects\"]))\n\n\n        this.setState({\n          listOfAsteroids: topTen.info\n        });\n      });\n    };\n\n    this.handleMissDisClick = e => {\n      e.preventDefault();\n      var today = new Date();\n      var dd = String(today.getDate()).padStart(2, \"0\");\n      var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n      var yyyy = today.getFullYear();\n      today = yyyy + \"-\" + mm + \"-\" + dd;\n      var end_day = new Date();\n      end_day.setDate(end_day.getDate() + 6);\n      var edd = String(end_day.getDate()).padStart(2, \"0\");\n      var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n      var eyyyy = end_day.getFullYear();\n      end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n      const url_aster_all = this.urlForAsterInfo(today, end_day);\n      fetch(url_aster_all).then(r => r.json()).then(data => {\n        console.log(data);\n        console.log(data.near_earth_objects[\"2020-02-23\"]);\n        var asters = {\n          info: []\n        };\n        var j = 0;\n\n        while (j < 7) {\n          var end_day = new Date();\n          end_day.setDate(end_day.getDate() + j);\n          var edd = String(end_day.getDate()).padStart(2, \"0\");\n          var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n          var eyyyy = end_day.getFullYear();\n          end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n\n          for (var i in data.near_earth_objects[end_day]) {\n            var item = data.near_earth_objects[end_day][i];\n            console.log(item.close_approach_data[\"0\"].miss_distance.kilometers);\n            asters.info.push({\n              date: end_day,\n              name: item.name.substr(1, item.name.length - 2),\n              estimated_diameter_max: item.estimated_diameter.meters.estimated_diameter_max,\n              is_hazardous: item.is_potentially_hazardous_asteroid,\n              close_approach_data: item.close_approach_data,\n              miss_distance: item.close_approach_data[\"0\"].miss_distance.kilometers\n            });\n          }\n\n          j = j + 1;\n        }\n\n        asters.info.sort(this.compareMissDis);\n        console.log(asters); //console.log(asters.info[item]);\n        //console.log(this.flatten(data[\"near_earth_objects\"]))\n\n        this.setState({\n          listOfAsteroids: asters.info\n        });\n      });\n    };\n\n    this.displayImg = data => {\n      if (!data) return;\n      this.setState({\n        imgURL: data.url\n      });\n      var apod = {\n        url: \"\",\n        type: \"\"\n      };\n      apod.url = data.url;\n      apod.type = data[\"media_type\"];\n      this.setState({\n        apodss: apod\n      });\n      this.setState({\n        type: data[\"media_type\"]\n      });\n    };\n\n    this.getAPOD = () => {\n      var today = new Date();\n      var dd = String(today.getDate()).padStart(2, \"0\");\n      var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n\n      var yyyy = today.getFullYear();\n      today = yyyy + \"-\" + mm + \"-\" + dd;\n      const baseURL = \"https://api.nasa.gov/planetary/apod?date=\";\n      const api_key = \"api_key=BWwii9sVzbeaMDa4dfvjdvgT5Q30VgEgdyRmibIf\";\n      const url = `${baseURL}${today}&${api_key}`;\n      return fetch(url).then(r => r.json()).then(this.displayImg);\n    };\n\n    this.urlForTMDB = resource => {\n      const api_key_param = \"api_key=bde024f3eb43f597aafe01ed9c9098c6\";\n      const language_param = \"language=en-US\";\n      const region_param = \"region=US\";\n      const filter_param = \"include_adult=false\";\n      const base_url = `https://api.themoviedb.org/3/movie/${resource}`;\n      const api_url = `${base_url}?${api_key_param}&${language_param}&${region_param}&${filter_param}`;\n      return api_url;\n    };\n\n    this.urlForAsterInfo = (start_date, end_date) => {\n      const base_url = \"https://api.nasa.gov/neo/rest/v1/feed?\";\n      const api_key = \"api_key=BWwii9sVzbeaMDa4dfvjdvgT5Q30VgEgdyRmibIf\";\n      const api_url = `${base_url}?start_date=${start_date}&end_date=${end_date}&${api_key}`;\n      return api_url;\n    };\n\n    this.state = {\n      listOfMovies: [],\n      selectedMovie: null,\n      listOfAsteroids: [],\n      selectedAsteroids: null,\n      imgURL: \"\",\n      apodss: null,\n      type: \"\",\n      title: \"\",\n      explanation: \"\",\n      logo: \"https://www.nasa.gov/sites/default/files/thumbnails/image/nasa-logo-web-rgb.png\"\n    };\n  }\n\n  componentDidMount() {\n    const url = this.urlForTMDB(\"now_playing\");\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n\n    var yyyy = today.getFullYear();\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    const baseURL = \"https://api.nasa.gov/planetary/apod?date=\";\n    const api_key = \"api_key=BWwii9sVzbeaMDa4dfvjdvgT5Q30VgEgdyRmibIf\";\n    const imgurl = `${baseURL}${today}&${api_key}`;\n    fetch(imgurl).then(r => r.json()).then(data => {\n      console.log(data);\n      this.setState({\n        imgURL: data.url\n      });\n      var apod1 = {\n        url: \"\",\n        type: \"\",\n        title: \"\",\n        explanation: \"\"\n      };\n      console.log(\"here it is a\");\n      console.log(data[\"media_type\"]);\n      apod1.url = data.url;\n      apod1.type = data[\"media_type\"];\n      apod1.title = data.title;\n      apod1.explanation = data.explanation;\n      this.setState({\n        apodss: apod1\n      });\n      this.setState({\n        type: data[\"media_type\"]\n      });\n      this.setState({\n        title: data.title\n      });\n      this.setState({\n        explanation: data.explanation\n      });\n    });\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n    var yyyy = today.getFullYear();\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    var end_day = new Date();\n    end_day.setDate(end_day.getDate() + 6);\n    var edd = String(end_day.getDate()).padStart(2, \"0\");\n    var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n    var eyyyy = end_day.getFullYear();\n    end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n    const url_aster_all = this.urlForAsterInfo(today, end_day);\n    fetch(url).then(r => r.json()).then(data => {\n      console.log(data);\n      this.setState({\n        listOfMovies: data.results\n      });\n    });\n    fetch(url_aster_all).then(r => r.json()).then(data => {\n      var asters = {\n        info: []\n      };\n      var j = 0;\n\n      while (j < 7) {\n        var end_day = new Date();\n        end_day.setDate(end_day.getDate() + j);\n        var edd = String(end_day.getDate()).padStart(2, \"0\");\n        var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n        var eyyyy = end_day.getFullYear();\n        end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n\n        for (var i in data.near_earth_objects[end_day]) {\n          var item = data.near_earth_objects[end_day][i];\n          console.log(item.close_approach_data[\"0\"].miss_distance.kilometers);\n          asters.info.push({\n            date: end_day,\n            name: item.name.substr(1, item.name.length - 2),\n            estimated_diameter_max: item.estimated_diameter.meters.estimated_diameter_max,\n            is_hazardous: item.is_potentially_hazardous_asteroid,\n            close_approach_data: item.close_approach_data,\n            miss_distance: item.close_approach_data[\"0\"].miss_distance.kilometers\n          });\n        }\n\n        j = j + 1;\n      }\n\n      console.log(asters); //console.log(asters.info[item]);\n      //console.log(this.flatten(data[\"near_earth_objects\"]))\n\n      this.setState({\n        listOfAsteroids: asters.info\n      });\n    });\n  } // let names = [\"Jeff\", \"Ariana\", \"Bob\"]\n  // let length_of_names = names.map(function(item) {\n  //   return item.length;\n  // })  // [4, 6, 3]\n\n\n  render() {\n    const posters = this.state.listOfMovies.map(movie => {\n      return React.createElement(Poster, {\n        movie: movie,\n        whenClicked: this.handlePosterClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      });\n    });\n    const asteriods = this.state.listOfAsteroids.map(asteriod => {\n      return React.createElement(Asteroid, {\n        asteriod: asteriod,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      });\n    });\n    const apodPass = {\n      url: this.state.imgURL,\n      type: this.state.type,\n      title: this.state.title,\n      explanation: this.state.explanation\n    };\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"header-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"img-background\",\n      src: \"https://apod.nasa.gov/apod/image/2002/CenA_hst1000.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      id: \"img-logo\",\n      src: \"https://www.nasa.gov/sites/default/files/thumbnails/image/nasa-logo-web-rgb.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      id: \"welcome-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Welcome to\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }), \"Asteroid Infomation Site.\"), React.createElement(\"h2\", {\n      id: \"text-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"___\"), React.createElement(\"h2\", {\n      id: \"introduction-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"The website provides information \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), \"on the asteroids coming in the next 7 days.\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(PictureOfDay, {\n      img: apodPass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"buttons\",\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleTopRatedClick,\n      className: \"btn btn-secondary\",\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Get Top-Rated Movies\"), React.createElement(\"button\", {\n      onClick: this.handleNowPlayingClick,\n      className: \"ml-3 btn btn-secondary\",\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Now Playing\"), React.createElement(\"button\", {\n      onClick: this.handleMissDisClick,\n      className: \"ml-3 btn btn-secondary\",\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"Miss Distance\"), React.createElement(\"button\", {\n      onClick: this.handleMaxDiameterClick,\n      className: \"ml-3 btn btn-secondary\",\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"Max Estimated Diameter\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"wall\",\n      className: \"table-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: \"table\",\n      id: \"asteriods-list\",\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      id: \"list-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Data Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Asteroid Name\"), React.createElement(\"th\", {\n      id: \"th-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"Max Estimated Diameter (m)\"), React.createElement(\"th\", {\n      id: \"th-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Miss Distance (km)\")), React.createElement(\"tbody\", {\n      id: \"list-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, asteriods)))));\n  }\n\n  compareMaxDiameter(a, b) {\n    // Use toUpperCase() to ignore character casing\n    const bandA = parseFloat(a.estimated_diameter_max);\n    const bandB = parseFloat(b.estimated_diameter_max);\n    let comparison = 0;\n\n    if (bandA > bandB) {\n      comparison = -1;\n    } else if (bandA < bandB) {\n      comparison = 1;\n    }\n\n    return comparison;\n  }\n\n  compareMissDis(a, b) {\n    // Use toUpperCase() to ignore character casing\n    const bandA = parseFloat(a.miss_distance);\n    const bandB = parseFloat(b.miss_distance);\n    let comparison = 0;\n\n    if (bandA > bandB) {\n      comparison = 1;\n    } else if (bandA < bandB) {\n      comparison = -1;\n    }\n\n    return comparison;\n  }\n\n} // function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Wazzzzzzup! Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//     );\n// }\n\n\nexport default App;","map":{"version":3,"sources":["/Users/sinzevivens/Documents/GitHub/week7/src/App.js"],"names":["React","Component","Table","PictureOfDay","render","console","log","props","img","url","String","type","valueOf","title","explanation","MovieDetail","movie","poster_path","overview","Asteroid","asteriod","name","date","estimated_diameter_max","miss_distance","Poster","e","whenClicked","release_date","substr","App","constructor","handlePosterClick","setState","selectedMovie","handleNowPlayingClick","preventDefault","urlForTMDB","fetch","then","r","json","data","listOfMovies","results","handleTopRatedClick","handleMaxDiameterClick","today","Date","dd","getDate","padStart","mm","getMonth","yyyy","getFullYear","end_day","setDate","edd","emm","eyyyy","url_aster_all","urlForAsterInfo","asters","info","j","i","near_earth_objects","item","push","length","estimated_diameter","meters","is_hazardous","is_potentially_hazardous_asteroid","close_approach_data","kilometers","sort","compareMaxDiameter","topTen","cnt","listOfAsteroids","handleMissDisClick","compareMissDis","displayImg","imgURL","apod","apodss","getAPOD","baseURL","api_key","resource","api_key_param","language_param","region_param","filter_param","base_url","api_url","start_date","end_date","state","selectedAsteroids","logo","componentDidMount","imgurl","apod1","posters","map","asteriods","apodPass","a","b","bandA","parseFloat","bandB","comparison"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,OAAO,WAAP;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AACnCG,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,GAAX,CAAeC,GAA3B;;AAEA,QAAI,CAAC,KAAKF,KAAV,EAAiB;AACf,aAAO,IAAP;AACD;;AACD,QACE,IAAIG,MAAJ,CAAW,KAAKH,KAAL,CAAWC,GAAX,CAAeG,IAA1B,EAAgCC,OAAhC,MAA6C,IAAIF,MAAJ,CAAW,OAAX,EAAoBE,OAApB,EAD/C,EAEE;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,aACE;AAAK,QAAA,EAAE,EAAC,OAAR;AAAgB,QAAA,SAAS,EAAC,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAoB,QAAA,MAAM,EAAC,KAA3B;AAAiC,QAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,GAAX,CAAeC,GAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,EAAE,EAAC,YAAR;AAAqB,QAAA,SAAS,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsB,KAAKF,KAAL,CAAWC,GAAX,CAAeK,KAArC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAU,KAAKN,KAAL,CAAWC,GAAX,CAAeM,WAAzB,CAFF,CAJF,CADF;AAWD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAE,KAAKP,KAAL,CAAWC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;;AAhCkC;;AAmCrC,MAAMO,WAAN,SAA0Bd,SAA1B,CAAoC;AAClCG,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKG,KAAL,CAAWS,KAAhB,EAAuB;AACrB,aAAO,IAAP;AACD;;AAED,WACE;AAAK,MAAA,GAAG,EAAE,KAAKT,KAAL,CAAWS,KAAX,CAAiBH,KAA3B;AAAkC,MAAA,SAAS,EAAC,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAG,kCAAiC,KAAKN,KAAL,CAAWS,KAAX,CAAiBC,WAAY,EADtE;AAEE,MAAA,SAAS,EAAC,cAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKV,KAAL,CAAWS,KAAX,CAAiBH,KAA7C,CADF,EAEE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKN,KAAL,CAAWS,KAAX,CAAiBE,QAA3C,CAFF,CALF,CADF,CADF;AAcD;;AApBiC;;AAuBpC,MAAMC,QAAN,SAAuBlB,SAAvB,CAAiC;AAC/BG,EAAAA,MAAM,GAAG;AACP,WACE;AAAI,MAAA,GAAG,EAAE,KAAKG,KAAL,CAAWa,QAAX,CAAoBC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKd,KAAL,CAAWa,QAAX,CAAoBE,IAAzB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKf,KAAL,CAAWa,QAAX,CAAoBC,IAAzB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKd,KAAL,CAAWa,QAAX,CAAoBG,sBAAzB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKhB,KAAL,CAAWa,QAAX,CAAoBI,aAAzB,CAJF,CADF;AAQD;;AAV8B;;AAajC,MAAMC,MAAN,SAAqBxB,SAArB,CAA+B;AAC7BG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,GAAG,EAAE,KAAKG,KAAL,CAAWS,KAAX,CAAiBH,KAA3B;AAAkC,MAAA,SAAS,EAAC,mBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,YAAY,EAAEa,CAAC,IAAI;AACjB,aAAKnB,KAAL,CAAWoB,WAAX,CAAuB,KAAKpB,KAAL,CAAWS,KAAlC;AACD,OAHH;AAIE,MAAA,GAAG,EAAG,kCAAiC,KAAKT,KAAL,CAAWS,KAAX,CAAiBC,WAAY,EAJtE;AAKE,MAAA,SAAS,EAAC,WALZ;AAME,MAAA,GAAG,EAAG,cAAa,KAAKV,KAAL,CAAWS,KAAX,CAAiBH,KAAM,EAN5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKN,KAAL,CAAWS,KAAX,CAAiBY,YAAjB,CAA8BC,MAA9B,CAAqC,CAArC,EAAwC,CAAxC,CAAJ,CATF,CADF;AAaD;;AAf4B;;AAkB/B,MAAMC,GAAN,SAAkB7B,SAAlB,CAA4B;AAC1B8B,EAAAA,WAAW,CAACxB,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoHnByB,iBApHmB,GAoHChB,KAAK,IAAI;AAC3B,WAAKiB,QAAL,CAAc;AAAEC,QAAAA,aAAa,EAAElB;AAAjB,OAAd;AACD,KAtHkB;;AAAA,SAwNnBmB,qBAxNmB,GAwNKT,CAAC,IAAI;AAC3BA,MAAAA,CAAC,CAACU,cAAF;AACA,YAAM3B,GAAG,GAAG,KAAK4B,UAAL,CAAgB,aAAhB,CAAZ;AAEAC,MAAAA,KAAK,CAAC7B,GAAD,CAAL,CACG8B,IADH,CACQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADb,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZrC,QAAAA,OAAO,CAACC,GAAR,CAAYoC,IAAZ;AACA,aAAKT,QAAL,CAAc;AAAEU,UAAAA,YAAY,EAAED,IAAI,CAACE;AAArB,SAAd,EAFY,CAGZ;AACD,OANH;AAOD,KAnOkB;;AAAA,SAoOnBC,mBApOmB,GAoOGnB,CAAC,IAAI;AACzBA,MAAAA,CAAC,CAACU,cAAF;AACA,YAAM3B,GAAG,GAAG,KAAK4B,UAAL,CAAgB,WAAhB,CAAZ;AAEAC,MAAAA,KAAK,CAAC7B,GAAD,CAAL,CACG8B,IADH,CACQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADb,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZrC,QAAAA,OAAO,CAACC,GAAR,CAAYoC,IAAZ;AACA,aAAKT,QAAL,CAAc;AAAEU,UAAAA,YAAY,EAAED,IAAI,CAACE;AAArB,SAAd,EAFY,CAGZ;AACD,OANH;AAOD,KA/OkB;;AAAA,SA+PnBE,sBA/PmB,GA+PMpB,CAAC,IAAI;AAC5BA,MAAAA,CAAC,CAACU,cAAF;AAEA,UAAIW,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,UAAIC,EAAE,GAAGvC,MAAM,CAACqC,KAAK,CAACG,OAAN,EAAD,CAAN,CAAwBC,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,CAAT;AACA,UAAIC,EAAE,GAAG1C,MAAM,CAACqC,KAAK,CAACM,QAAN,KAAmB,CAApB,CAAN,CAA6BF,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAT;AACA,UAAIG,IAAI,GAAGP,KAAK,CAACQ,WAAN,EAAX;AACAR,MAAAA,KAAK,GAAGO,IAAI,GAAG,GAAP,GAAaF,EAAb,GAAkB,GAAlB,GAAwBH,EAAhC;AAEA,UAAIO,OAAO,GAAG,IAAIR,IAAJ,EAAd;AACAQ,MAAAA,OAAO,CAACC,OAAR,CAAgBD,OAAO,CAACN,OAAR,KAAoB,CAApC;AACA,UAAIQ,GAAG,GAAGhD,MAAM,CAAC8C,OAAO,CAACN,OAAR,EAAD,CAAN,CAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAAV;AACA,UAAIQ,GAAG,GAAGjD,MAAM,CAAC8C,OAAO,CAACH,QAAR,KAAqB,CAAtB,CAAN,CAA+BF,QAA/B,CAAwC,CAAxC,EAA2C,GAA3C,CAAV;AACA,UAAIS,KAAK,GAAGJ,OAAO,CAACD,WAAR,EAAZ;AACAC,MAAAA,OAAO,GAAGI,KAAK,GAAG,GAAR,GAAcD,GAAd,GAAoB,GAApB,GAA0BD,GAApC;AAEA,YAAMG,aAAa,GAAG,KAAKC,eAAL,CAAqBf,KAArB,EAA4BS,OAA5B,CAAtB;AAEAlB,MAAAA,KAAK,CAACuB,aAAD,CAAL,CACGtB,IADH,CACQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADb,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,YAAIqB,MAAM,GAAG;AACXC,UAAAA,IAAI,EAAE;AADK,SAAb;AAGA,YAAIC,CAAC,GAAG,CAAR;;AACA,eAAOA,CAAC,GAAG,CAAX,EAAc;AACZ,cAAIT,OAAO,GAAG,IAAIR,IAAJ,EAAd;AACAQ,UAAAA,OAAO,CAACC,OAAR,CAAgBD,OAAO,CAACN,OAAR,KAAoBe,CAApC;AACA,cAAIP,GAAG,GAAGhD,MAAM,CAAC8C,OAAO,CAACN,OAAR,EAAD,CAAN,CAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAAV;AACA,cAAIQ,GAAG,GAAGjD,MAAM,CAAC8C,OAAO,CAACH,QAAR,KAAqB,CAAtB,CAAN,CAA+BF,QAA/B,CAAwC,CAAxC,EAA2C,GAA3C,CAAV;AACA,cAAIS,KAAK,GAAGJ,OAAO,CAACD,WAAR,EAAZ;AACAC,UAAAA,OAAO,GAAGI,KAAK,GAAG,GAAR,GAAcD,GAAd,GAAoB,GAApB,GAA0BD,GAApC;;AACA,eAAK,IAAIQ,CAAT,IAAcxB,IAAI,CAACyB,kBAAL,CAAwBX,OAAxB,CAAd,EAAgD;AAC9C,gBAAIY,IAAI,GAAG1B,IAAI,CAACyB,kBAAL,CAAwBX,OAAxB,EAAiCU,CAAjC,CAAX;AACAH,YAAAA,MAAM,CAACC,IAAP,CAAYK,IAAZ,CAAiB;AACf/C,cAAAA,IAAI,EAAEkC,OADS;AAEfnC,cAAAA,IAAI,EAAE+C,IAAI,CAAC/C,IAAL,CAAUQ,MAAV,CAAiB,CAAjB,EAAoBuC,IAAI,CAAC/C,IAAL,CAAUiD,MAAV,GAAmB,CAAvC,CAFS;AAGf/C,cAAAA,sBAAsB,EACpB6C,IAAI,CAACG,kBAAL,CAAwBC,MAAxB,CAA+BjD,sBAJlB;AAKfkD,cAAAA,YAAY,EAAEL,IAAI,CAACM,iCALJ;AAMfC,cAAAA,mBAAmB,EAAEP,IAAI,CAACO,mBANX;AAOfnD,cAAAA,aAAa,EACX4C,IAAI,CAACO,mBAAL,CAAyB,GAAzB,EAA8BnD,aAA9B,CAA4CoD;AAR/B,aAAjB;AAUD;;AACDX,UAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACD;;AAEDF,QAAAA,MAAM,CAACC,IAAP,CAAYa,IAAZ,CAAiB,KAAKC,kBAAtB;AAEA,YAAIC,MAAM,GAAG;AACXf,UAAAA,IAAI,EAAE;AADK,SAAb;AAGA,YAAIgB,GAAG,GAAG,CAAV;AAEA3E,QAAAA,OAAO,CAACC,GAAR,CAAYyD,MAAZ;;AAEA,aAAK,IAAIG,CAAT,IAAcH,MAAM,CAACC,IAArB,EAA2B;AACzB,cAAII,IAAI,GAAGL,MAAM,CAACC,IAAP,CAAYE,CAAZ,CAAX;AACAa,UAAAA,MAAM,CAACf,IAAP,CAAYK,IAAZ,CAAiBN,MAAM,CAACC,IAAP,CAAYE,CAAZ,CAAjB;AACAc,UAAAA,GAAG,GAAGA,GAAG,GAAG,CAAZ;;AACA,cAAIA,GAAG,IAAI,EAAX,EAAe;AACb;AACD;AACF,SA5CW,CA8CZ;AACA;;;AACA,aAAK/C,QAAL,CAAc;AAAEgD,UAAAA,eAAe,EAAEF,MAAM,CAACf;AAA1B,SAAd;AACD,OAnDH;AAoDD,KArUkB;;AAAA,SAqVnBkB,kBArVmB,GAqVExD,CAAC,IAAI;AACxBA,MAAAA,CAAC,CAACU,cAAF;AAEA,UAAIW,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,UAAIC,EAAE,GAAGvC,MAAM,CAACqC,KAAK,CAACG,OAAN,EAAD,CAAN,CAAwBC,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,CAAT;AACA,UAAIC,EAAE,GAAG1C,MAAM,CAACqC,KAAK,CAACM,QAAN,KAAmB,CAApB,CAAN,CAA6BF,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAT;AACA,UAAIG,IAAI,GAAGP,KAAK,CAACQ,WAAN,EAAX;AACAR,MAAAA,KAAK,GAAGO,IAAI,GAAG,GAAP,GAAaF,EAAb,GAAkB,GAAlB,GAAwBH,EAAhC;AAEA,UAAIO,OAAO,GAAG,IAAIR,IAAJ,EAAd;AACAQ,MAAAA,OAAO,CAACC,OAAR,CAAgBD,OAAO,CAACN,OAAR,KAAoB,CAApC;AACA,UAAIQ,GAAG,GAAGhD,MAAM,CAAC8C,OAAO,CAACN,OAAR,EAAD,CAAN,CAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAAV;AACA,UAAIQ,GAAG,GAAGjD,MAAM,CAAC8C,OAAO,CAACH,QAAR,KAAqB,CAAtB,CAAN,CAA+BF,QAA/B,CAAwC,CAAxC,EAA2C,GAA3C,CAAV;AACA,UAAIS,KAAK,GAAGJ,OAAO,CAACD,WAAR,EAAZ;AACAC,MAAAA,OAAO,GAAGI,KAAK,GAAG,GAAR,GAAcD,GAAd,GAAoB,GAApB,GAA0BD,GAApC;AAEA,YAAMG,aAAa,GAAG,KAAKC,eAAL,CAAqBf,KAArB,EAA4BS,OAA5B,CAAtB;AAEAlB,MAAAA,KAAK,CAACuB,aAAD,CAAL,CACGtB,IADH,CACQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADb,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZrC,QAAAA,OAAO,CAACC,GAAR,CAAYoC,IAAZ;AACArC,QAAAA,OAAO,CAACC,GAAR,CAAYoC,IAAI,CAACyB,kBAAL,CAAwB,YAAxB,CAAZ;AACA,YAAIJ,MAAM,GAAG;AACXC,UAAAA,IAAI,EAAE;AADK,SAAb;AAGA,YAAIC,CAAC,GAAG,CAAR;;AACA,eAAOA,CAAC,GAAG,CAAX,EAAc;AACZ,cAAIT,OAAO,GAAG,IAAIR,IAAJ,EAAd;AACAQ,UAAAA,OAAO,CAACC,OAAR,CAAgBD,OAAO,CAACN,OAAR,KAAoBe,CAApC;AACA,cAAIP,GAAG,GAAGhD,MAAM,CAAC8C,OAAO,CAACN,OAAR,EAAD,CAAN,CAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAAV;AACA,cAAIQ,GAAG,GAAGjD,MAAM,CAAC8C,OAAO,CAACH,QAAR,KAAqB,CAAtB,CAAN,CAA+BF,QAA/B,CAAwC,CAAxC,EAA2C,GAA3C,CAAV;AACA,cAAIS,KAAK,GAAGJ,OAAO,CAACD,WAAR,EAAZ;AACAC,UAAAA,OAAO,GAAGI,KAAK,GAAG,GAAR,GAAcD,GAAd,GAAoB,GAApB,GAA0BD,GAApC;;AACA,eAAK,IAAIQ,CAAT,IAAcxB,IAAI,CAACyB,kBAAL,CAAwBX,OAAxB,CAAd,EAAgD;AAC9C,gBAAIY,IAAI,GAAG1B,IAAI,CAACyB,kBAAL,CAAwBX,OAAxB,EAAiCU,CAAjC,CAAX;AACA7D,YAAAA,OAAO,CAACC,GAAR,CAAY8D,IAAI,CAACO,mBAAL,CAAyB,GAAzB,EAA8BnD,aAA9B,CAA4CoD,UAAxD;AACAb,YAAAA,MAAM,CAACC,IAAP,CAAYK,IAAZ,CAAiB;AACf/C,cAAAA,IAAI,EAAEkC,OADS;AAEfnC,cAAAA,IAAI,EAAE+C,IAAI,CAAC/C,IAAL,CAAUQ,MAAV,CAAiB,CAAjB,EAAoBuC,IAAI,CAAC/C,IAAL,CAAUiD,MAAV,GAAmB,CAAvC,CAFS;AAGf/C,cAAAA,sBAAsB,EACpB6C,IAAI,CAACG,kBAAL,CAAwBC,MAAxB,CAA+BjD,sBAJlB;AAKfkD,cAAAA,YAAY,EAAEL,IAAI,CAACM,iCALJ;AAMfC,cAAAA,mBAAmB,EAAEP,IAAI,CAACO,mBANX;AAOfnD,cAAAA,aAAa,EACX4C,IAAI,CAACO,mBAAL,CAAyB,GAAzB,EAA8BnD,aAA9B,CAA4CoD;AAR/B,aAAjB;AAUD;;AACDX,UAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACD;;AAEDF,QAAAA,MAAM,CAACC,IAAP,CAAYa,IAAZ,CAAiB,KAAKM,cAAtB;AAEA9E,QAAAA,OAAO,CAACC,GAAR,CAAYyD,MAAZ,EAjCY,CAkCZ;AACA;;AACA,aAAK9B,QAAL,CAAc;AAAEgD,UAAAA,eAAe,EAAElB,MAAM,CAACC;AAA1B,SAAd;AACD,OAvCH;AAwCD,KA/YkB;;AAAA,SAiZnBoB,UAjZmB,GAiZN1C,IAAI,IAAI;AACnB,UAAI,CAACA,IAAL,EAAW;AACX,WAAKT,QAAL,CAAc;AAAEoD,QAAAA,MAAM,EAAE3C,IAAI,CAACjC;AAAf,OAAd;AACA,UAAI6E,IAAI,GAAG;AACT7E,QAAAA,GAAG,EAAE,EADI;AAETE,QAAAA,IAAI,EAAE;AAFG,OAAX;AAIA2E,MAAAA,IAAI,CAAC7E,GAAL,GAAWiC,IAAI,CAACjC,GAAhB;AACA6E,MAAAA,IAAI,CAAC3E,IAAL,GAAY+B,IAAI,CAAC,YAAD,CAAhB;AACA,WAAKT,QAAL,CAAc;AAAEsD,QAAAA,MAAM,EAAED;AAAV,OAAd;AACA,WAAKrD,QAAL,CAAc;AAAEtB,QAAAA,IAAI,EAAE+B,IAAI,CAAC,YAAD;AAAZ,OAAd;AACD,KA5ZkB;;AAAA,SA8ZnB8C,OA9ZmB,GA8ZT,MAAM;AACd,UAAIzC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,UAAIC,EAAE,GAAGvC,MAAM,CAACqC,KAAK,CAACG,OAAN,EAAD,CAAN,CAAwBC,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,CAAT;AACA,UAAIC,EAAE,GAAG1C,MAAM,CAACqC,KAAK,CAACM,QAAN,KAAmB,CAApB,CAAN,CAA6BF,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAT,CAHc,CAG0C;;AACxD,UAAIG,IAAI,GAAGP,KAAK,CAACQ,WAAN,EAAX;AAEAR,MAAAA,KAAK,GAAGO,IAAI,GAAG,GAAP,GAAaF,EAAb,GAAkB,GAAlB,GAAwBH,EAAhC;AACA,YAAMwC,OAAO,GAAG,2CAAhB;AACA,YAAMC,OAAO,GAAG,kDAAhB;AACA,YAAMjF,GAAG,GAAI,GAAEgF,OAAQ,GAAE1C,KAAM,IAAG2C,OAAQ,EAA1C;AACA,aAAOpD,KAAK,CAAC7B,GAAD,CAAL,CACJ8B,IADI,CACCC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADN,EAEJF,IAFI,CAEC,KAAK6C,UAFN,CAAP;AAGD,KA3akB;;AAAA,SA6anB/C,UA7amB,GA6aNsD,QAAQ,IAAI;AACvB,YAAMC,aAAa,GAAG,0CAAtB;AACA,YAAMC,cAAc,GAAG,gBAAvB;AACA,YAAMC,YAAY,GAAG,WAArB;AACA,YAAMC,YAAY,GAAG,qBAArB;AACA,YAAMC,QAAQ,GAAI,sCAAqCL,QAAS,EAAhE;AACA,YAAMM,OAAO,GAAI,GAAED,QAAS,IAAGJ,aAAc,IAAGC,cAAe,IAAGC,YAAa,IAAGC,YAAa,EAA/F;AACA,aAAOE,OAAP;AACD,KArbkB;;AAAA,SAubnBnC,eAvbmB,GAubD,CAACoC,UAAD,EAAaC,QAAb,KAA0B;AAC1C,YAAMH,QAAQ,GAAG,wCAAjB;AACA,YAAMN,OAAO,GAAG,kDAAhB;AACA,YAAMO,OAAO,GAAI,GAAED,QAAS,eAAcE,UAAW,aAAYC,QAAS,IAAGT,OAAQ,EAArF;AACA,aAAOO,OAAP;AACD,KA5bkB;;AAEjB,SAAKG,KAAL,GAAa;AACXzD,MAAAA,YAAY,EAAE,EADH;AAEXT,MAAAA,aAAa,EAAE,IAFJ;AAGX+C,MAAAA,eAAe,EAAE,EAHN;AAIXoB,MAAAA,iBAAiB,EAAE,IAJR;AAKXhB,MAAAA,MAAM,EAAE,EALG;AAMXE,MAAAA,MAAM,EAAE,IANG;AAOX5E,MAAAA,IAAI,EAAE,EAPK;AAQXE,MAAAA,KAAK,EAAE,EARI;AASXC,MAAAA,WAAW,EAAE,EATF;AAUXwF,MAAAA,IAAI,EACF;AAXS,KAAb;AAaD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM9F,GAAG,GAAG,KAAK4B,UAAL,CAAgB,aAAhB,CAAZ;AAEA,QAAIU,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAIC,EAAE,GAAGvC,MAAM,CAACqC,KAAK,CAACG,OAAN,EAAD,CAAN,CAAwBC,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,CAAT;AACA,QAAIC,EAAE,GAAG1C,MAAM,CAACqC,KAAK,CAACM,QAAN,KAAmB,CAApB,CAAN,CAA6BF,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAT,CALkB,CAKsC;;AACxD,QAAIG,IAAI,GAAGP,KAAK,CAACQ,WAAN,EAAX;AAEAR,IAAAA,KAAK,GAAGO,IAAI,GAAG,GAAP,GAAaF,EAAb,GAAkB,GAAlB,GAAwBH,EAAhC;AACA,UAAMwC,OAAO,GAAG,2CAAhB;AACA,UAAMC,OAAO,GAAG,kDAAhB;AACA,UAAMc,MAAM,GAAI,GAAEf,OAAQ,GAAE1C,KAAM,IAAG2C,OAAQ,EAA7C;AACApD,IAAAA,KAAK,CAACkE,MAAD,CAAL,CACGjE,IADH,CACQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADb,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZrC,MAAAA,OAAO,CAACC,GAAR,CAAYoC,IAAZ;AACA,WAAKT,QAAL,CAAc;AAAEoD,QAAAA,MAAM,EAAE3C,IAAI,CAACjC;AAAf,OAAd;AACA,UAAIgG,KAAK,GAAG;AACVhG,QAAAA,GAAG,EAAE,EADK;AAEVE,QAAAA,IAAI,EAAE,EAFI;AAGVE,QAAAA,KAAK,EAAE,EAHG;AAIVC,QAAAA,WAAW,EAAE;AAJH,OAAZ;AAMAT,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYoC,IAAI,CAAC,YAAD,CAAhB;AACA+D,MAAAA,KAAK,CAAChG,GAAN,GAAYiC,IAAI,CAACjC,GAAjB;AACAgG,MAAAA,KAAK,CAAC9F,IAAN,GAAa+B,IAAI,CAAC,YAAD,CAAjB;AACA+D,MAAAA,KAAK,CAAC5F,KAAN,GAAc6B,IAAI,CAAC7B,KAAnB;AACA4F,MAAAA,KAAK,CAAC3F,WAAN,GAAoB4B,IAAI,CAAC5B,WAAzB;AACA,WAAKmB,QAAL,CAAc;AAAEsD,QAAAA,MAAM,EAAEkB;AAAV,OAAd;AACA,WAAKxE,QAAL,CAAc;AAAEtB,QAAAA,IAAI,EAAE+B,IAAI,CAAC,YAAD;AAAZ,OAAd;AACA,WAAKT,QAAL,CAAc;AAAEpB,QAAAA,KAAK,EAAE6B,IAAI,CAAC7B;AAAd,OAAd;AACA,WAAKoB,QAAL,CAAc;AAAEnB,QAAAA,WAAW,EAAE4B,IAAI,CAAC5B;AAApB,OAAd;AACD,KArBH;AAuBA,QAAIiC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAIC,EAAE,GAAGvC,MAAM,CAACqC,KAAK,CAACG,OAAN,EAAD,CAAN,CAAwBC,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,CAAT;AACA,QAAIC,EAAE,GAAG1C,MAAM,CAACqC,KAAK,CAACM,QAAN,KAAmB,CAApB,CAAN,CAA6BF,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAT;AACA,QAAIG,IAAI,GAAGP,KAAK,CAACQ,WAAN,EAAX;AACAR,IAAAA,KAAK,GAAGO,IAAI,GAAG,GAAP,GAAaF,EAAb,GAAkB,GAAlB,GAAwBH,EAAhC;AAEA,QAAIO,OAAO,GAAG,IAAIR,IAAJ,EAAd;AACAQ,IAAAA,OAAO,CAACC,OAAR,CAAgBD,OAAO,CAACN,OAAR,KAAoB,CAApC;AACA,QAAIQ,GAAG,GAAGhD,MAAM,CAAC8C,OAAO,CAACN,OAAR,EAAD,CAAN,CAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAAV;AACA,QAAIQ,GAAG,GAAGjD,MAAM,CAAC8C,OAAO,CAACH,QAAR,KAAqB,CAAtB,CAAN,CAA+BF,QAA/B,CAAwC,CAAxC,EAA2C,GAA3C,CAAV;AACA,QAAIS,KAAK,GAAGJ,OAAO,CAACD,WAAR,EAAZ;AACAC,IAAAA,OAAO,GAAGI,KAAK,GAAG,GAAR,GAAcD,GAAd,GAAoB,GAApB,GAA0BD,GAApC;AAEA,UAAMG,aAAa,GAAG,KAAKC,eAAL,CAAqBf,KAArB,EAA4BS,OAA5B,CAAtB;AAEAlB,IAAAA,KAAK,CAAC7B,GAAD,CAAL,CACG8B,IADH,CACQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADb,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZrC,MAAAA,OAAO,CAACC,GAAR,CAAYoC,IAAZ;AACA,WAAKT,QAAL,CAAc;AAAEU,QAAAA,YAAY,EAAED,IAAI,CAACE;AAArB,OAAd;AACD,KALH;AAOAN,IAAAA,KAAK,CAACuB,aAAD,CAAL,CACGtB,IADH,CACQC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADb,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,UAAIqB,MAAM,GAAG;AACXC,QAAAA,IAAI,EAAE;AADK,OAAb;AAGA,UAAIC,CAAC,GAAG,CAAR;;AACA,aAAOA,CAAC,GAAG,CAAX,EAAc;AACZ,YAAIT,OAAO,GAAG,IAAIR,IAAJ,EAAd;AACAQ,QAAAA,OAAO,CAACC,OAAR,CAAgBD,OAAO,CAACN,OAAR,KAAoBe,CAApC;AACA,YAAIP,GAAG,GAAGhD,MAAM,CAAC8C,OAAO,CAACN,OAAR,EAAD,CAAN,CAA0BC,QAA1B,CAAmC,CAAnC,EAAsC,GAAtC,CAAV;AACA,YAAIQ,GAAG,GAAGjD,MAAM,CAAC8C,OAAO,CAACH,QAAR,KAAqB,CAAtB,CAAN,CAA+BF,QAA/B,CAAwC,CAAxC,EAA2C,GAA3C,CAAV;AACA,YAAIS,KAAK,GAAGJ,OAAO,CAACD,WAAR,EAAZ;AACAC,QAAAA,OAAO,GAAGI,KAAK,GAAG,GAAR,GAAcD,GAAd,GAAoB,GAApB,GAA0BD,GAApC;;AACA,aAAK,IAAIQ,CAAT,IAAcxB,IAAI,CAACyB,kBAAL,CAAwBX,OAAxB,CAAd,EAAgD;AAC9C,cAAIY,IAAI,GAAG1B,IAAI,CAACyB,kBAAL,CAAwBX,OAAxB,EAAiCU,CAAjC,CAAX;AACA7D,UAAAA,OAAO,CAACC,GAAR,CAAY8D,IAAI,CAACO,mBAAL,CAAyB,GAAzB,EAA8BnD,aAA9B,CAA4CoD,UAAxD;AACAb,UAAAA,MAAM,CAACC,IAAP,CAAYK,IAAZ,CAAiB;AACf/C,YAAAA,IAAI,EAAEkC,OADS;AAEfnC,YAAAA,IAAI,EAAE+C,IAAI,CAAC/C,IAAL,CAAUQ,MAAV,CAAiB,CAAjB,EAAoBuC,IAAI,CAAC/C,IAAL,CAAUiD,MAAV,GAAmB,CAAvC,CAFS;AAGf/C,YAAAA,sBAAsB,EACpB6C,IAAI,CAACG,kBAAL,CAAwBC,MAAxB,CAA+BjD,sBAJlB;AAKfkD,YAAAA,YAAY,EAAEL,IAAI,CAACM,iCALJ;AAMfC,YAAAA,mBAAmB,EAAEP,IAAI,CAACO,mBANX;AAOfnD,YAAAA,aAAa,EACX4C,IAAI,CAACO,mBAAL,CAAyB,GAAzB,EAA8BnD,aAA9B,CAA4CoD;AAR/B,WAAjB;AAUD;;AACDX,QAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACD;;AAED5D,MAAAA,OAAO,CAACC,GAAR,CAAYyD,MAAZ,EA7BY,CA8BZ;AACA;;AACA,WAAK9B,QAAL,CAAc;AAAEgD,QAAAA,eAAe,EAAElB,MAAM,CAACC;AAA1B,OAAd;AACD,KAnCH;AAoCD,GA/GyB,CAgH1B;AACA;AACA;AACA;;;AAKA5D,EAAAA,MAAM,GAAG;AACP,UAAMsG,OAAO,GAAG,KAAKN,KAAL,CAAWzD,YAAX,CAAwBgE,GAAxB,CAA4B3F,KAAK,IAAI;AACnD,aAAO,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAEA,KAAf;AAAsB,QAAA,WAAW,EAAE,KAAKgB,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFe,CAAhB;AAGA,UAAM4E,SAAS,GAAG,KAAKR,KAAL,CAAWnB,eAAX,CAA2B0B,GAA3B,CAA+BvF,QAAQ,IAAI;AAC3D,aAAO,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEA,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFiB,CAAlB;AAIA,UAAMyF,QAAQ,GAAG;AACfpG,MAAAA,GAAG,EAAE,KAAK2F,KAAL,CAAWf,MADD;AAEf1E,MAAAA,IAAI,EAAE,KAAKyF,KAAL,CAAWzF,IAFF;AAGfE,MAAAA,KAAK,EAAE,KAAKuF,KAAL,CAAWvF,KAHH;AAIfC,MAAAA,WAAW,EAAE,KAAKsF,KAAL,CAAWtF;AAJT,KAAjB;AAOA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,GAAG,EAAC,wDAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE;AACE,MAAA,EAAE,EAAC,UADL;AAEE,MAAA,GAAG,EAAC,iFAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EASE;AAAI,MAAA,EAAE,EAAC,cAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,8BATF,EAcE;AAAI,MAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAdF,EAeE;AAAI,MAAA,EAAE,EAAC,mBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnC,gDAfF,CADF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAE+F,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAtBF,EAyBE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,KAAKhE,mBADhB;AAEE,MAAA,SAAS,EAAC,mBAFZ;AAGE,MAAA,IAAI,EAAC,GAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAQE;AACE,MAAA,OAAO,EAAE,KAAKV,qBADhB;AAEE,MAAA,SAAS,EAAC,wBAFZ;AAGE,MAAA,IAAI,EAAC,GAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARF,EAeE;AACE,MAAA,OAAO,EAAE,KAAK+C,kBADhB;AAEE,MAAA,SAAS,EAAC,wBAFZ;AAGE,MAAA,IAAI,EAAC,GAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAfF,EAsBE;AACE,MAAA,OAAO,EAAE,KAAKpC,sBADhB;AAEE,MAAA,SAAS,EAAC,wBAFZ;AAGE,MAAA,IAAI,EAAC,GAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAtBF,CADF,CAzBF,EAyDE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAe,MAAA,SAAS,EAAC,kBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,EAAE,EAAC,gBAFL;AAGE,MAAA,OAAO,MAHT;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,KAAK,MALP;AAME,MAAA,OAAO,EAAC,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE;AAAO,MAAA,EAAE,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE;AAAI,MAAA,EAAE,EAAC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAHF,EAIE;AAAI,MAAA,EAAE,EAAC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,CARF,EAcE;AAAO,MAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB8D,SAAvB,CAdF,CADF,CADF,CAzDF,CADF;AAgFD;;AA2BD9B,EAAAA,kBAAkB,CAACgC,CAAD,EAAIC,CAAJ,EAAO;AACvB;AACA,UAAMC,KAAK,GAAGC,UAAU,CAACH,CAAC,CAACvF,sBAAH,CAAxB;AACA,UAAM2F,KAAK,GAAGD,UAAU,CAACF,CAAC,CAACxF,sBAAH,CAAxB;AAEA,QAAI4F,UAAU,GAAG,CAAjB;;AACA,QAAIH,KAAK,GAAGE,KAAZ,EAAmB;AACjBC,MAAAA,UAAU,GAAG,CAAC,CAAd;AACD,KAFD,MAEO,IAAIH,KAAK,GAAGE,KAAZ,EAAmB;AACxBC,MAAAA,UAAU,GAAG,CAAb;AACD;;AACD,WAAOA,UAAP;AACD;;AA0EDhC,EAAAA,cAAc,CAAC2B,CAAD,EAAIC,CAAJ,EAAO;AACnB;AACA,UAAMC,KAAK,GAAGC,UAAU,CAACH,CAAC,CAACtF,aAAH,CAAxB;AACA,UAAM0F,KAAK,GAAGD,UAAU,CAACF,CAAC,CAACvF,aAAH,CAAxB;AAEA,QAAI2F,UAAU,GAAG,CAAjB;;AACA,QAAIH,KAAK,GAAGE,KAAZ,EAAmB;AACjBC,MAAAA,UAAU,GAAG,CAAb;AACD,KAFD,MAEO,IAAIH,KAAK,GAAGE,KAAZ,EAAmB;AACxBC,MAAAA,UAAU,GAAG,CAAC,CAAd;AACD;;AACD,WAAOA,UAAP;AACD;;AApVyB,C,CAgc5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,eAAerF,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Table from \"react-bootstrap/Button\";\n\nimport \"./App.css\";\n\nclass PictureOfDay extends Component {\n  render() {\n    console.log(this.props);\n    console.log(\"what i need\");\n    console.log(this.props.img.url);\n\n    if (!this.props) {\n      return null;\n    }\n    if (\n      new String(this.props.img.type).valueOf() == new String(\"video\").valueOf()\n    ) {\n      console.log(\"is a video\");\n      return (\n        <div id=\"video\" className=\"header row\">\n          <div className=\"header-img \">\n            <iframe width=\"420\" height=\"315\" src={this.props.img.url}></iframe>\n          </div>\n          <div id=\"video-text\" className=\"col\">\n            <h1 id=\"video-title\">{this.props.img.title}</h1>\n            <article>{this.props.img.explanation}</article>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"header\">\n        <div className=\"header-img\">\n          <img src={this.props.img} />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass MovieDetail extends Component {\n  render() {\n    if (!this.props.movie) {\n      return null;\n    }\n\n    return (\n      <div key={this.props.movie.title} className=\"text-center\">\n        <div className=\"card shadow\">\n          <img\n            src={`http://image.tmdb.org/t/p/w185/${this.props.movie.poster_path}`}\n            className=\"card-img-top\"\n          />\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{this.props.movie.title}</h5>\n            <p className=\"card-text\">{this.props.movie.overview}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Asteroid extends Component {\n  render() {\n    return (\n      <tr key={this.props.asteriod.name}>\n        <td>{this.props.asteriod.date}</td>\n        <td>{this.props.asteriod.name}</td>\n        <td>{this.props.asteriod.estimated_diameter_max}</td>\n        <td>{this.props.asteriod.miss_distance}</td>\n      </tr>\n    );\n  }\n}\n\nclass Poster extends Component {\n  render() {\n    return (\n      <div key={this.props.movie.title} className=\"col-3 text-center\">\n        <img\n          onMouseEnter={e => {\n            this.props.whenClicked(this.props.movie);\n          }}\n          src={`http://image.tmdb.org/t/p/w185/${this.props.movie.poster_path}`}\n          className=\"img-fluid\"\n          alt={`Poster for ${this.props.movie.title}`}\n        ></img>\n        <p>{this.props.movie.release_date.substr(0, 4)}</p>\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOfMovies: [],\n      selectedMovie: null,\n      listOfAsteroids: [],\n      selectedAsteroids: null,\n      imgURL: \"\",\n      apodss: null,\n      type: \"\",\n      title: \"\",\n      explanation: \"\",\n      logo:\n        \"https://www.nasa.gov/sites/default/files/thumbnails/image/nasa-logo-web-rgb.png\"\n    };\n  }\n\n  componentDidMount() {\n    const url = this.urlForTMDB(\"now_playing\");\n\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    var yyyy = today.getFullYear();\n\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    const baseURL = \"https://api.nasa.gov/planetary/apod?date=\";\n    const api_key = \"api_key=BWwii9sVzbeaMDa4dfvjdvgT5Q30VgEgdyRmibIf\";\n    const imgurl = `${baseURL}${today}&${api_key}`;\n    fetch(imgurl)\n      .then(r => r.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ imgURL: data.url });\n        var apod1 = {\n          url: \"\",\n          type: \"\",\n          title: \"\",\n          explanation: \"\"\n        };\n        console.log(\"here it is a\");\n        console.log(data[\"media_type\"]);\n        apod1.url = data.url;\n        apod1.type = data[\"media_type\"];\n        apod1.title = data.title;\n        apod1.explanation = data.explanation;\n        this.setState({ apodss: apod1 });\n        this.setState({ type: data[\"media_type\"] });\n        this.setState({ title: data.title });\n        this.setState({ explanation: data.explanation });\n      });\n\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n    var yyyy = today.getFullYear();\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n\n    var end_day = new Date();\n    end_day.setDate(end_day.getDate() + 6);\n    var edd = String(end_day.getDate()).padStart(2, \"0\");\n    var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n    var eyyyy = end_day.getFullYear();\n    end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n\n    const url_aster_all = this.urlForAsterInfo(today, end_day);\n\n    fetch(url)\n      .then(r => r.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ listOfMovies: data.results });\n      });\n\n    fetch(url_aster_all)\n      .then(r => r.json())\n      .then(data => {\n        var asters = {\n          info: []\n        };\n        var j = 0;\n        while (j < 7) {\n          var end_day = new Date();\n          end_day.setDate(end_day.getDate() + j);\n          var edd = String(end_day.getDate()).padStart(2, \"0\");\n          var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n          var eyyyy = end_day.getFullYear();\n          end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n          for (var i in data.near_earth_objects[end_day]) {\n            var item = data.near_earth_objects[end_day][i];\n            console.log(item.close_approach_data[\"0\"].miss_distance.kilometers);\n            asters.info.push({\n              date: end_day,\n              name: item.name.substr(1, item.name.length - 2),\n              estimated_diameter_max:\n                item.estimated_diameter.meters.estimated_diameter_max,\n              is_hazardous: item.is_potentially_hazardous_asteroid,\n              close_approach_data: item.close_approach_data,\n              miss_distance:\n                item.close_approach_data[\"0\"].miss_distance.kilometers\n            });\n          }\n          j = j + 1;\n        }\n\n        console.log(asters);\n        //console.log(asters.info[item]);\n        //console.log(this.flatten(data[\"near_earth_objects\"]))\n        this.setState({ listOfAsteroids: asters.info });\n      });\n  }\n  // let names = [\"Jeff\", \"Ariana\", \"Bob\"]\n  // let length_of_names = names.map(function(item) {\n  //   return item.length;\n  // })  // [4, 6, 3]\n\n  handlePosterClick = movie => {\n    this.setState({ selectedMovie: movie });\n  };\n  render() {\n    const posters = this.state.listOfMovies.map(movie => {\n      return <Poster movie={movie} whenClicked={this.handlePosterClick} />;\n    });\n    const asteriods = this.state.listOfAsteroids.map(asteriod => {\n      return <Asteroid asteriod={asteriod} />;\n    });\n\n    const apodPass = {\n      url: this.state.imgURL,\n      type: this.state.type,\n      title: this.state.title,\n      explanation: this.state.explanation\n    };\n\n    return (\n      <div className=\"container\">\n        <div id=\"header-logo\">\n          <img\n            id=\"img-background\"\n            src=\"https://apod.nasa.gov/apod/image/2002/CenA_hst1000.jpg\"\n          />\n          <img\n            id=\"img-logo\"\n            src=\"https://www.nasa.gov/sites/default/files/thumbnails/image/nasa-logo-web-rgb.png\"\n          />\n          <h1 id=\"welcome-text\">\n            Welcome to\n            <br />\n            Asteroid Infomation Site.\n          </h1>\n          <h2 id=\"text-line\">___</h2>\n          <h2 id=\"introduction-text\">\n            The website provides information <br />\n            on the asteroids coming in the next 7 days.\n          </h2>\n        </div>\n\n        <div>\n          <PictureOfDay img={apodPass} />\n        </div>\n        <div className=\"row mb-5\">\n          <div id=\"buttons\" className=\"col\">\n            <button\n              onClick={this.handleTopRatedClick}\n              className=\"btn btn-secondary\"\n              href=\"#\"\n            >\n              Get Top-Rated Movies\n            </button>\n            <button\n              onClick={this.handleNowPlayingClick}\n              className=\"ml-3 btn btn-secondary\"\n              href=\"#\"\n            >\n              Now Playing\n            </button>\n            <button\n              onClick={this.handleMissDisClick}\n              className=\"ml-3 btn btn-secondary\"\n              href=\"#\"\n            >\n              Miss Distance\n            </button>\n            <button\n              onClick={this.handleMaxDiameterClick}\n              className=\"ml-3 btn btn-secondary\"\n              href=\"#\"\n            >\n              Max Estimated Diameter\n            </button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div id=\"wall\" className=\"table-responsive\">\n            <Table\n              className=\"table\"\n              id=\"asteriods-list\"\n              striped\n              bordered\n              hover\n              variant=\"dark\"\n            >\n              <thead id=\"list-title\">\n                <th>Data Date</th>\n                <th>Asteroid Name</th>\n                <th id=\"th-1\">Max Estimated Diameter (m)</th>\n                <th id=\"th-2\">Miss Distance (km)</th>\n              </thead>\n              <tbody id=\"list-body\">{asteriods}</tbody>\n            </Table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  handleNowPlayingClick = e => {\n    e.preventDefault();\n    const url = this.urlForTMDB(\"now_playing\");\n\n    fetch(url)\n      .then(r => r.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ listOfMovies: data.results });\n        // this.state.listOfMovies = data.results\n      });\n  };\n  handleTopRatedClick = e => {\n    e.preventDefault();\n    const url = this.urlForTMDB(\"top_rated\");\n\n    fetch(url)\n      .then(r => r.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ listOfMovies: data.results });\n        // this.state.listOfMovies = data.results\n      });\n  };\n\n  compareMaxDiameter(a, b) {\n    // Use toUpperCase() to ignore character casing\n    const bandA = parseFloat(a.estimated_diameter_max);\n    const bandB = parseFloat(b.estimated_diameter_max);\n\n    let comparison = 0;\n    if (bandA > bandB) {\n      comparison = -1;\n    } else if (bandA < bandB) {\n      comparison = 1;\n    }\n    return comparison;\n  }\n\n  handleMaxDiameterClick = e => {\n    e.preventDefault();\n\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n    var yyyy = today.getFullYear();\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n\n    var end_day = new Date();\n    end_day.setDate(end_day.getDate() + 6);\n    var edd = String(end_day.getDate()).padStart(2, \"0\");\n    var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n    var eyyyy = end_day.getFullYear();\n    end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n\n    const url_aster_all = this.urlForAsterInfo(today, end_day);\n\n    fetch(url_aster_all)\n      .then(r => r.json())\n      .then(data => {\n        var asters = {\n          info: []\n        };\n        var j = 0;\n        while (j < 7) {\n          var end_day = new Date();\n          end_day.setDate(end_day.getDate() + j);\n          var edd = String(end_day.getDate()).padStart(2, \"0\");\n          var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n          var eyyyy = end_day.getFullYear();\n          end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n          for (var i in data.near_earth_objects[end_day]) {\n            var item = data.near_earth_objects[end_day][i];\n            asters.info.push({\n              date: end_day,\n              name: item.name.substr(1, item.name.length - 2),\n              estimated_diameter_max:\n                item.estimated_diameter.meters.estimated_diameter_max,\n              is_hazardous: item.is_potentially_hazardous_asteroid,\n              close_approach_data: item.close_approach_data,\n              miss_distance:\n                item.close_approach_data[\"0\"].miss_distance.kilometers\n            });\n          }\n          j = j + 1;\n        }\n\n        asters.info.sort(this.compareMaxDiameter);\n\n        var topTen = {\n          info: []\n        };\n        var cnt = 0;\n\n        console.log(asters);\n\n        for (var i in asters.info) {\n          var item = asters.info[i];\n          topTen.info.push(asters.info[i]);\n          cnt = cnt + 1;\n          if (cnt >= 10) {\n            break;\n          }\n        }\n\n        //console.log(asters.info[item]);\n        //console.log(this.flatten(data[\"near_earth_objects\"]))\n        this.setState({ listOfAsteroids: topTen.info });\n      });\n  };\n\n  compareMissDis(a, b) {\n    // Use toUpperCase() to ignore character casing\n    const bandA = parseFloat(a.miss_distance);\n    const bandB = parseFloat(b.miss_distance);\n\n    let comparison = 0;\n    if (bandA > bandB) {\n      comparison = 1;\n    } else if (bandA < bandB) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n\n  handleMissDisClick = e => {\n    e.preventDefault();\n\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n    var yyyy = today.getFullYear();\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n\n    var end_day = new Date();\n    end_day.setDate(end_day.getDate() + 6);\n    var edd = String(end_day.getDate()).padStart(2, \"0\");\n    var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n    var eyyyy = end_day.getFullYear();\n    end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n\n    const url_aster_all = this.urlForAsterInfo(today, end_day);\n\n    fetch(url_aster_all)\n      .then(r => r.json())\n      .then(data => {\n        console.log(data);\n        console.log(data.near_earth_objects[\"2020-02-23\"]);\n        var asters = {\n          info: []\n        };\n        var j = 0;\n        while (j < 7) {\n          var end_day = new Date();\n          end_day.setDate(end_day.getDate() + j);\n          var edd = String(end_day.getDate()).padStart(2, \"0\");\n          var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n          var eyyyy = end_day.getFullYear();\n          end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n          for (var i in data.near_earth_objects[end_day]) {\n            var item = data.near_earth_objects[end_day][i];\n            console.log(item.close_approach_data[\"0\"].miss_distance.kilometers);\n            asters.info.push({\n              date: end_day,\n              name: item.name.substr(1, item.name.length - 2),\n              estimated_diameter_max:\n                item.estimated_diameter.meters.estimated_diameter_max,\n              is_hazardous: item.is_potentially_hazardous_asteroid,\n              close_approach_data: item.close_approach_data,\n              miss_distance:\n                item.close_approach_data[\"0\"].miss_distance.kilometers\n            });\n          }\n          j = j + 1;\n        }\n\n        asters.info.sort(this.compareMissDis);\n\n        console.log(asters);\n        //console.log(asters.info[item]);\n        //console.log(this.flatten(data[\"near_earth_objects\"]))\n        this.setState({ listOfAsteroids: asters.info });\n      });\n  };\n\n  displayImg = data => {\n    if (!data) return;\n    this.setState({ imgURL: data.url });\n    var apod = {\n      url: \"\",\n      type: \"\"\n    };\n    apod.url = data.url;\n    apod.type = data[\"media_type\"];\n    this.setState({ apodss: apod });\n    this.setState({ type: data[\"media_type\"] });\n  };\n\n  getAPOD = () => {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    var yyyy = today.getFullYear();\n\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    const baseURL = \"https://api.nasa.gov/planetary/apod?date=\";\n    const api_key = \"api_key=BWwii9sVzbeaMDa4dfvjdvgT5Q30VgEgdyRmibIf\";\n    const url = `${baseURL}${today}&${api_key}`;\n    return fetch(url)\n      .then(r => r.json())\n      .then(this.displayImg);\n  };\n\n  urlForTMDB = resource => {\n    const api_key_param = \"api_key=bde024f3eb43f597aafe01ed9c9098c6\";\n    const language_param = \"language=en-US\";\n    const region_param = \"region=US\";\n    const filter_param = \"include_adult=false\";\n    const base_url = `https://api.themoviedb.org/3/movie/${resource}`;\n    const api_url = `${base_url}?${api_key_param}&${language_param}&${region_param}&${filter_param}`;\n    return api_url;\n  };\n\n  urlForAsterInfo = (start_date, end_date) => {\n    const base_url = \"https://api.nasa.gov/neo/rest/v1/feed?\";\n    const api_key = \"api_key=BWwii9sVzbeaMDa4dfvjdvgT5Q30VgEgdyRmibIf\";\n    const api_url = `${base_url}?start_date=${start_date}&end_date=${end_date}&${api_key}`;\n    return api_url;\n  };\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Wazzzzzzup! Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//     );\n\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}