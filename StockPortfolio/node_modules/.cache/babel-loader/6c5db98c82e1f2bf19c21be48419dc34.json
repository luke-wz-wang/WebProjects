{"ast":null,"code":"var _jsxFileName = \"/Users/sinzevivens/Documents/GitHub/week7/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Table from \"react-bootstrap/Table\";\nimport \"./App.css\";\n\nclass PictureOfDay extends Component {\n  render() {\n    console.log(this.props);\n    console.log(\"what i need\");\n    console.log(this.props.img.url);\n\n    if (!this.props) {\n      return null;\n    }\n\n    if (new String(this.props.img.type).valueOf() == new String(\"video\").valueOf()) {\n      console.log(\"is a video\");\n      return React.createElement(\"div\", {\n        id: \"video\",\n        className: \"header row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"video-content\",\n        className: \"header-img col-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"iframe\", {\n        width: \"100%\",\n        height: \"60%\",\n        src: this.props.img.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"video-text\",\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        id: \"video-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.props.img.title), React.createElement(\"article\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.props.img.explanation)));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header-img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.img.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"apod-text\",\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        id: \"apod-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.props.img.title), React.createElement(\"article\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.props.img.explanation)));\n    }\n  }\n\n}\n\nclass MovieDetail extends Component {\n  render() {\n    if (!this.props.movie) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      key: this.props.movie.title,\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: `http://image.tmdb.org/t/p/w185/${this.props.movie.poster_path}`,\n      className: \"card-img-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.props.movie.title), React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.props.movie.overview))));\n  }\n\n}\n\nclass Asteroid extends Component {\n  render() {\n    var str = \"\";\n    var is_precent = 0.3;\n\n    if (this.props.asteriod.is_hazardous) {\n      str = \"Yes\";\n      is_precent = 0.8;\n    } else {\n      str = \"No\";\n    }\n\n    var dia_precent = (this.props.asteriod.estimated_diameter_max - this.props.asteriod.min_diameter + 0.01) / (this.props.asteriod.max_diameter - this.props.asteriod.min_diameter);\n    var dis_percent = 1 - (this.props.asteriod.miss_distance - this.props.asteriod.min_dis) / (this.props.asteriod.max_dis - this.props.asteriod.min_dis);\n    var tdStyle = {\n      background: \"RGB(0,255,255,\" + dia_precent + \")\"\n    };\n    var isStyle = {\n      background: \"RGB(255,0,0,\" + is_precent + \")\"\n    };\n    var disStyle = {\n      background: \"RGB(255,0,255,\" + dis_percent + \")\"\n    };\n    return React.createElement(\"tr\", {\n      key: this.props.asteriod.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.props.asteriod.date), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.props.asteriod.name), React.createElement(\"td\", {\n      style: tdStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.props.asteriod.estimated_diameter_max), React.createElement(\"td\", {\n      style: disStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.props.asteriod.miss_distance), React.createElement(\"td\", {\n      style: isStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, str));\n  }\n\n}\n\nclass Poster extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      key: this.props.movie.title,\n      className: \"col-3 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      onMouseEnter: e => {\n        this.props.whenClicked(this.props.movie);\n      },\n      src: `http://image.tmdb.org/t/p/w185/${this.props.movie.poster_path}`,\n      className: \"img-fluid\",\n      alt: `Poster for ${this.props.movie.title}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.props.movie.release_date.substr(0, 4)));\n  }\n\n}\n\nvar diameter_max = 0;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePosterClick = movie => {\n      this.setState({\n        selectedMovie: movie\n      });\n    };\n\n    this.handleNowPlayingClick = e => {\n      e.preventDefault();\n      const url = this.urlForTMDB(\"now_playing\");\n      fetch(url).then(r => r.json()).then(data => {\n        console.log(data);\n        this.setState({\n          listOfMovies: data.results\n        }); // this.state.listOfMovies = data.results\n      });\n    };\n\n    this.handleTopRatedClick = e => {\n      e.preventDefault();\n      const url = this.urlForTMDB(\"top_rated\");\n      fetch(url).then(r => r.json()).then(data => {\n        console.log(data);\n        this.setState({\n          listOfMovies: data.results\n        }); // this.state.listOfMovies = data.results\n      });\n    };\n\n    this.handleDateClick = e => {\n      e.preventDefault();\n      this.state.listOfAsteroids.sort(this.compareDate); //console.log(asters.info[item]);\n      //console.log(this.flatten(data[\"near_earth_objects\"]))\n\n      this.setState({\n        listOfAsteroids: this.state.listOfAsteroids\n      });\n    };\n\n    this.handleHazardousClick = e => {\n      e.preventDefault();\n      this.state.listOfAsteroids.sort(this.compareHazardous); //console.log(asters.info[item]);\n      //console.log(this.flatten(data[\"near_earth_objects\"]))\n\n      this.setState({\n        listOfAsteroids: this.state.listOfAsteroids\n      }); // var today = new Date();\n      // var dd = String(today.getDate()).padStart(2, \"0\");\n      // var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n      // var yyyy = today.getFullYear();\n      // today = yyyy + \"-\" + mm + \"-\" + dd;\n      // var end_day = new Date();\n      // end_day.setDate(end_day.getDate() + 6);\n      // var edd = String(end_day.getDate()).padStart(2, \"0\");\n      // var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n      // var eyyyy = end_day.getFullYear();\n      // end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n      // const url_aster_all = this.urlForAsterInfo(today, end_day);\n      // fetch(url_aster_all)\n      //   .then(r => r.json())\n      //   .then(data => {\n      //     console.log(data);\n      //     console.log(data.near_earth_objects[\"2020-02-23\"]);\n      //     var asters = {\n      //       info: []\n      //     };\n      //     var j = 0;\n      //     while (j < 7) {\n      //       var end_day = new Date();\n      //       end_day.setDate(end_day.getDate() + j);\n      //       var edd = String(end_day.getDate()).padStart(2, \"0\");\n      //       var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n      //       var eyyyy = end_day.getFullYear();\n      //       end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n      //       for (var i in data.near_earth_objects[end_day]) {\n      //         var item = data.near_earth_objects[end_day][i];\n      //         console.log(item.close_approach_data[\"0\"].miss_distance.kilometers);\n      //         asters.info.push({\n      //           date: end_day,\n      //           name: item.name.substr(1, item.name.length - 2),\n      //           estimated_diameter_max:\n      //             item.estimated_diameter.meters.estimated_diameter_max,\n      //           is_hazardous: item.is_potentially_hazardous_asteroid,\n      //           close_approach_data: item.close_approach_data,\n      //           miss_distance:\n      //             item.close_approach_data[\"0\"].miss_distance.kilometers\n      //         });\n      //       }\n      //       j = j + 1;\n      //     }\n      //     // asters.info.sort(this.compareHazardous);\n      //     this.state.listOfAsteroids.sort(this.compareHazardous);\n      //     console.log(asters);\n      //     //console.log(asters.info[item]);\n      //     //console.log(this.flatten(data[\"near_earth_objects\"]))\n      //     this.setState({ listOfAsteroids: this.state.listOfAsteroids });\n      //   });\n    };\n\n    this.handleMaxDiameterClick = e => {\n      e.preventDefault();\n      this.state.listOfAsteroids.sort(this.compareMaxDiameter); //console.log(asters.info[item]);\n      //console.log(this.flatten(data[\"near_earth_objects\"]))\n\n      this.setState({\n        listOfAsteroids: this.state.listOfAsteroids\n      }); // var today = new Date();\n      // var dd = String(today.getDate()).padStart(2, \"0\");\n      // var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n      // var yyyy = today.getFullYear();\n      // today = yyyy + \"-\" + mm + \"-\" + dd;\n      // var end_day = new Date();\n      // end_day.setDate(end_day.getDate() + 6);\n      // var edd = String(end_day.getDate()).padStart(2, \"0\");\n      // var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n      // var eyyyy = end_day.getFullYear();\n      // end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n      // const url_aster_all = this.urlForAsterInfo(today, end_day);\n      // fetch(url_aster_all)\n      //   .then(r => r.json())\n      //   .then(data => {\n      //     var asters = {\n      //       info: []\n      //     };\n      //     var j = 0;\n      //     while (j < 7) {\n      //       var end_day = new Date();\n      //       end_day.setDate(end_day.getDate() + j);\n      //       var edd = String(end_day.getDate()).padStart(2, \"0\");\n      //       var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n      //       var eyyyy = end_day.getFullYear();\n      //       end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n      //       for (var i in data.near_earth_objects[end_day]) {\n      //         var item = data.near_earth_objects[end_day][i];\n      //         asters.info.push({\n      //           date: end_day,\n      //           name: item.name.substr(1, item.name.length - 2),\n      //           estimated_diameter_max:\n      //             item.estimated_diameter.meters.estimated_diameter_max,\n      //           is_hazardous: item.is_potentially_hazardous_asteroid,\n      //           close_approach_data: item.close_approach_data,\n      //           miss_distance:\n      //             item.close_approach_data[\"0\"].miss_distance.kilometers\n      //         });\n      //       }\n      //       j = j + 1;\n      //     }\n      //     asters.info.sort(this.compareMaxDiameter);\n      //     var topTen = {\n      //       info: []\n      //     };\n      //     var cnt = 0;\n      //     console.log(asters);\n      //     for (var i in asters.info) {\n      //       var item = asters.info[i];\n      //       topTen.info.push(asters.info[i]);\n      //       cnt = cnt + 1;\n      //       if (cnt >= 10) {\n      //         break;\n      //       }\n      //     }\n      //     //console.log(asters.info[item]);\n      //     //console.log(this.flatten(data[\"near_earth_objects\"]))\n      //     this.setState({ listOfAsteroids: topTen.info });\n      //   });\n    };\n\n    this.handleMissDisClick = e => {\n      e.preventDefault();\n      this.state.listOfAsteroids.sort(this.compareMissDis); //console.log(asters.info[item]);\n      //console.log(this.flatten(data[\"near_earth_objects\"]))\n\n      this.setState({\n        listOfAsteroids: this.state.listOfAsteroids\n      }); // var today = new Date();\n      // var dd = String(today.getDate()).padStart(2, \"0\");\n      // var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n      // var yyyy = today.getFullYear();\n      // today = yyyy + \"-\" + mm + \"-\" + dd;\n      // var end_day = new Date();\n      // end_day.setDate(end_day.getDate() + 6);\n      // var edd = String(end_day.getDate()).padStart(2, \"0\");\n      // var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n      // var eyyyy = end_day.getFullYear();\n      // end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n      // const url_aster_all = this.urlForAsterInfo(today, end_day);\n      // fetch(url_aster_all)\n      //   .then(r => r.json())\n      //   .then(data => {\n      //     console.log(data);\n      //     console.log(data.near_earth_objects[\"2020-02-23\"]);\n      //     var asters = {\n      //       info: []\n      //     };\n      //     var j = 0;\n      //     while (j < 7) {\n      //       var end_day = new Date();\n      //       end_day.setDate(end_day.getDate() + j);\n      //       var edd = String(end_day.getDate()).padStart(2, \"0\");\n      //       var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n      //       var eyyyy = end_day.getFullYear();\n      //       end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n      //       for (var i in data.near_earth_objects[end_day]) {\n      //         var item = data.near_earth_objects[end_day][i];\n      //         console.log(item.close_approach_data[\"0\"].miss_distance.kilometers);\n      //         asters.info.push({\n      //           date: end_day,\n      //           name: item.name.substr(1, item.name.length - 2),\n      //           estimated_diameter_max:\n      //             item.estimated_diameter.meters.estimated_diameter_max,\n      //           is_hazardous: item.is_potentially_hazardous_asteroid,\n      //           close_approach_data: item.close_approach_data,\n      //           miss_distance:\n      //             item.close_approach_data[\"0\"].miss_distance.kilometers\n      //         });\n      //       }\n      //       j = j + 1;\n      //     }\n      //     asters.info.sort(this.compareMissDis);\n      //     console.log(asters);\n      //     //console.log(asters.info[item]);\n      //     //console.log(this.flatten(data[\"near_earth_objects\"]))\n      //     this.setState({ listOfAsteroids: asters.info });\n      //   });\n    };\n\n    this.displayImg = data => {\n      if (!data) return;\n      this.setState({\n        imgURL: data.url\n      });\n      var apod = {\n        url: \"\",\n        type: \"\"\n      };\n      apod.url = data.url;\n      apod.type = data[\"media_type\"];\n      this.setState({\n        apodss: apod\n      });\n      this.setState({\n        type: data[\"media_type\"]\n      });\n    };\n\n    this.getAPOD = () => {\n      var today = new Date();\n      var dd = String(today.getDate()).padStart(2, \"0\");\n      var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n\n      var yyyy = today.getFullYear();\n      today = yyyy + \"-\" + mm + \"-\" + dd;\n      const baseURL = \"https://api.nasa.gov/planetary/apod?date=\";\n      const api_key = \"api_key=BWwii9sVzbeaMDa4dfvjdvgT5Q30VgEgdyRmibIf\";\n      const url = `${baseURL}${today}&${api_key}`;\n      return fetch(url).then(r => r.json()).then(this.displayImg);\n    };\n\n    this.urlForTMDB = resource => {\n      const api_key_param = \"api_key=bde024f3eb43f597aafe01ed9c9098c6\";\n      const language_param = \"language=en-US\";\n      const region_param = \"region=US\";\n      const filter_param = \"include_adult=false\";\n      const base_url = `https://api.themoviedb.org/3/movie/${resource}`;\n      const api_url = `${base_url}?${api_key_param}&${language_param}&${region_param}&${filter_param}`;\n      return api_url;\n    };\n\n    this.urlForAsterInfo = (start_date, end_date) => {\n      const base_url = \"https://api.nasa.gov/neo/rest/v1/feed?\";\n      const api_key = \"api_key=BWwii9sVzbeaMDa4dfvjdvgT5Q30VgEgdyRmibIf\";\n      const api_url = `${base_url}?start_date=${start_date}&end_date=${end_date}&${api_key}`;\n      return api_url;\n    };\n\n    this.state = {\n      listOfMovies: [],\n      selectedMovie: null,\n      listOfAsteroids: [],\n      selectedAsteroids: null,\n      imgURL: \"\",\n      apodss: null,\n      type: \"\",\n      title: \"\",\n      explanation: \"\",\n      max_diameter: 0,\n      min_diameter: 100000000000000,\n      max_dis: 0,\n      min_dis: 100000000000000,\n      logo: \"https://www.nasa.gov/sites/default/files/thumbnails/image/nasa-logo-web-rgb.png\"\n    };\n  }\n\n  componentDidMount() {\n    const url = this.urlForTMDB(\"now_playing\");\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n\n    var yyyy = today.getFullYear();\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    const baseURL = \"https://api.nasa.gov/planetary/apod?date=\";\n    const api_key = \"api_key=BWwii9sVzbeaMDa4dfvjdvgT5Q30VgEgdyRmibIf\";\n    const imgurl = `${baseURL}${today}&${api_key}`;\n    fetch(imgurl).then(r => r.json()).then(data => {\n      console.log(data);\n      this.setState({\n        imgURL: data.url\n      });\n      var apod1 = {\n        url: \"\",\n        type: \"\",\n        title: \"\",\n        explanation: \"\"\n      };\n      console.log(\"here it is a\");\n      console.log(data[\"media_type\"]);\n      apod1.url = data.url;\n      apod1.type = data[\"media_type\"];\n      apod1.title = data.title;\n      apod1.explanation = data.explanation;\n      this.setState({\n        apodss: apod1\n      });\n      this.setState({\n        type: data[\"media_type\"]\n      });\n      this.setState({\n        title: data.title\n      });\n      this.setState({\n        explanation: data.explanation\n      });\n    });\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n    var yyyy = today.getFullYear();\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    var end_day = new Date();\n    end_day.setDate(end_day.getDate() + 6);\n    var edd = String(end_day.getDate()).padStart(2, \"0\");\n    var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n    var eyyyy = end_day.getFullYear();\n    end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n    const url_aster_all = this.urlForAsterInfo(today, end_day);\n    fetch(url).then(r => r.json()).then(data => {\n      console.log(data);\n      this.setState({\n        listOfMovies: data.results\n      });\n    });\n    fetch(url_aster_all).then(r => r.json()).then(data => {\n      var asters = {\n        info: []\n      };\n      var j = 0;\n\n      while (j < 7) {\n        var end_day = new Date();\n        end_day.setDate(end_day.getDate() + j);\n        var edd = String(end_day.getDate()).padStart(2, \"0\");\n        var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n        var eyyyy = end_day.getFullYear();\n        end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n\n        for (var i in data.near_earth_objects[end_day]) {\n          var item = data.near_earth_objects[end_day][i];\n\n          if (parseFloat(item.estimated_diameter.meters.estimated_diameter_max) > this.state.max_diameter) {\n            this.setState({\n              max_diameter: parseFloat(item.estimated_diameter.meters.estimated_diameter_max)\n            });\n          }\n\n          if (parseFloat(item.estimated_diameter.meters.estimated_diameter_max) < this.state.min_diameter) {\n            this.setState({\n              min_diameter: parseFloat(item.estimated_diameter.meters.estimated_diameter_max)\n            });\n          }\n\n          if (parseFloat(item.close_approach_data[\"0\"].miss_distance.kilometers) > this.state.max_dis) {\n            this.setState({\n              max_dis: parseFloat(item.close_approach_data[\"0\"].miss_distance.kilometers)\n            });\n          }\n\n          if (parseFloat(item.close_approach_data[\"0\"].miss_distance.kilometers) < this.state.min_dis) {\n            this.setState({\n              min_dis: parseFloat(item.close_approach_data[\"0\"].miss_distance.kilometers)\n            });\n          }\n\n          asters.info.push({\n            date: end_day,\n            name: item.name.substr(1, item.name.length - 2),\n            estimated_diameter_max: item.estimated_diameter.meters.estimated_diameter_max,\n            is_hazardous: item.is_potentially_hazardous_asteroid,\n            close_approach_data: item.close_approach_data,\n            miss_distance: item.close_approach_data[\"0\"].miss_distance.kilometers,\n            max_diameter: 0,\n            min_diameter: 10000000,\n            min_dis: 1000000000,\n            max_dis: 0\n          });\n        }\n\n        j = j + 1;\n      }\n\n      for (var i in asters.info) {\n        asters.info[i].max_diameter = this.state.max_diameter;\n        asters.info[i].min_diameter = this.state.min_diameter;\n        asters.info[i].min_dis = this.state.min_dis;\n        asters.info[i].max_dis = this.state.max_dis;\n        console.log(asters.info[i]);\n      }\n\n      console.log(asters);\n      console.log(\"max disa\");\n      console.log(window.diameter_max); //console.log(asters.info[item]);\n      //console.log(this.flatten(data[\"near_earth_objects\"]))\n\n      this.setState({\n        listOfAsteroids: asters.info\n      });\n    });\n  } // let names = [\"Jeff\", \"Ariana\", \"Bob\"]\n  // let length_of_names = names.map(function(item) {\n  //   return item.length;\n  // })  // [4, 6, 3]\n\n\n  render() {\n    const posters = this.state.listOfMovies.map(movie => {\n      return React.createElement(Poster, {\n        movie: movie,\n        whenClicked: this.handlePosterClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      });\n    });\n    const asteriods = this.state.listOfAsteroids.map(asteriod => {\n      return React.createElement(Asteroid, {\n        asteriod: asteriod,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      });\n    });\n    const apodPass = {\n      url: this.state.imgURL,\n      type: this.state.type,\n      title: this.state.title,\n      explanation: this.state.explanation\n    };\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"header-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"img-background\",\n      src: \"https://apod.nasa.gov/apod/image/2002/CenA_hst1000.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      id: \"img-logo\",\n      src: \"https://www.nasa.gov/sites/default/files/thumbnails/image/nasa-logo-web-rgb.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      id: \"welcome-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"Welcome to\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }), \"Asteroid Infomation Site.\"), React.createElement(\"h2\", {\n      id: \"text-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"___\"), React.createElement(\"h2\", {\n      id: \"introduction-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"The website provides information \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }), \"on the asteroids coming in the next 7 days.\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(PictureOfDay, {\n      img: apodPass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, \"Click button to sort data\"), React.createElement(\"div\", {\n      id: \"buttons\",\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"note\",\n      className: \"ml-3 left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, \"Click button to sort data\"), React.createElement(\"button\", {\n      onClick: this.handleDateClick,\n      className: \"btn btn-secondary\",\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"button\", {\n      onClick: this.handleHazardousClick,\n      className: \"ml-3 btn btn-secondary\",\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, \"Is Hazardous\"), React.createElement(\"button\", {\n      onClick: this.handleMissDisClick,\n      className: \"ml-3 btn btn-secondary\",\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, \"Miss Distance\"), React.createElement(\"button\", {\n      onClick: this.handleMaxDiameterClick,\n      className: \"ml-3 btn btn-secondary\",\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \"Max Estimated Diameter\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"wall\",\n      className: \"table-responsive col center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: \"table col center\",\n      id: \"asteriods-list\",\n      bordered: true,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      id: \"list-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, \"Data Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, \"Asteroid Name\"), React.createElement(\"th\", {\n      id: \"th-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, \"Max Estimated Diameter (m)\"), React.createElement(\"th\", {\n      id: \"th-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, \"Miss Distance (km)\"), React.createElement(\"th\", {\n      id: \"th-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, \"Is Hazardous\")), React.createElement(\"tbody\", {\n      id: \"list-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }, asteriods)))));\n  }\n\n  compareDate(a, b) {\n    // Use toUpperCase() to ignore character casing\n    var comparison;\n\n    if (a.date > b.date) {\n      comparison = -1;\n    } else {\n      comparison = 1;\n    }\n\n    return comparison;\n  }\n\n  compareHazardous(a, b) {\n    // Use toUpperCase() to ignore character casing\n    var comparison;\n\n    if (a.is_hazardous > b.is_hazardous) {\n      comparison = -1;\n    } else {\n      comparison = 1;\n    }\n\n    return comparison;\n  }\n\n  compareMaxDiameter(a, b) {\n    // Use toUpperCase() to ignore character casing\n    const bandA = parseFloat(a.estimated_diameter_max);\n    const bandB = parseFloat(b.estimated_diameter_max);\n    let comparison = 0;\n\n    if (bandA > bandB) {\n      comparison = -1;\n    } else if (bandA < bandB) {\n      comparison = 1;\n    }\n\n    return comparison;\n  }\n\n  compareMissDis(a, b) {\n    // Use toUpperCase() to ignore character casing\n    const bandA = parseFloat(a.miss_distance);\n    const bandB = parseFloat(b.miss_distance);\n    let comparison = 0;\n\n    if (bandA > bandB) {\n      comparison = 1;\n    } else if (bandA < bandB) {\n      comparison = -1;\n    }\n\n    return comparison;\n  }\n\n} // function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Wazzzzzzup! Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//     );\n// }\n\n\nexport default App;","map":{"version":3,"sources":["/Users/sinzevivens/Documents/GitHub/week7/src/App.js"],"names":["React","Component","Table","PictureOfDay","render","console","log","props","img","url","String","type","valueOf","title","explanation","MovieDetail","movie","poster_path","overview","Asteroid","str","is_precent","asteriod","is_hazardous","dia_precent","estimated_diameter_max","min_diameter","max_diameter","dis_percent","miss_distance","min_dis","max_dis","tdStyle","background","isStyle","disStyle","name","date","Poster","e","whenClicked","release_date","substr","diameter_max","App","constructor","handlePosterClick","setState","selectedMovie","handleNowPlayingClick","preventDefault","urlForTMDB","fetch","then","r","json","data","listOfMovies","results","handleTopRatedClick","handleDateClick","state","listOfAsteroids","sort","compareDate","handleHazardousClick","compareHazardous","handleMaxDiameterClick","compareMaxDiameter","handleMissDisClick","compareMissDis","displayImg","imgURL","apod","apodss","getAPOD","today","Date","dd","getDate","padStart","mm","getMonth","yyyy","getFullYear","baseURL","api_key","resource","api_key_param","language_param","region_param","filter_param","base_url","api_url","urlForAsterInfo","start_date","end_date","selectedAsteroids","logo","componentDidMount","imgurl","apod1","end_day","setDate","edd","emm","eyyyy","url_aster_all","asters","info","j","i","near_earth_objects","item","parseFloat","estimated_diameter","meters","close_approach_data","kilometers","push","length","is_potentially_hazardous_asteroid","window","posters","map","asteriods","apodPass","a","b","comparison","bandA","bandB"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACD,KAvZkB;;AAAA,SAuanBK,sBAvamB,GAuaM5B,CAAC,IAAI;AAC5BA,MAAAA,CAAC,CAACW,cAAF;AAEA,WAAKW,KAAL,CAAWC,eAAX,CAA2BC,IAA3B,CAAgC,KAAKK,kBAArC,EAH4B,CAK5B;AACA;;AACA,WAAKrB,QAAL,CAAc;AAAEe,QAAAA,eAAe,EAAE,KAAKD,KAAL,CAAWC;AAA9B,OAAd,EAP4B,CAS5B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACD,KAnfkB;;AAAA,SAmgBnBO,kBAngBmB,GAmgBE9B,CAAC,IAAI;AACxBA,MAAAA,CAAC,CAACW,cAAF;AAEA,WAAKW,KAAL,CAAWC,eAAX,CAA2BC,IAA3B,CAAgC,KAAKO,cAArC,EAHwB,CAKxB;AACA;;AACA,WAAKvB,QAAL,CAAc;AAAEe,QAAAA,eAAe,EAAE,KAAKD,KAAL,CAAWC;AAA9B,OAAd,EAPwB,CASxB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;A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","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Table from \"react-bootstrap/Table\";\n\nimport \"./App.css\";\n\nclass PictureOfDay extends Component {\n  render() {\n    console.log(this.props);\n    console.log(\"what i need\");\n    console.log(this.props.img.url);\n\n    if (!this.props) {\n      return null;\n    }\n    if (\n      new String(this.props.img.type).valueOf() == new String(\"video\").valueOf()\n    ) {\n      console.log(\"is a video\");\n      return (\n        <div id=\"video\" className=\"header row\">\n          <div id=\"video-content\" className=\"header-img col-4\">\n            <iframe width=\"100%\" height=\"60%\" src={this.props.img.url}></iframe>\n          </div>\n          <div id=\"video-text\" className=\"col\">\n            <h1 id=\"video-title\">{this.props.img.title}</h1>\n            <article>{this.props.img.explanation}</article>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"header\">\n          <div className=\"header-img\">\n            <img src={this.props.img.url} />\n          </div>\n          <div id=\"apod-text\" className=\"col\">\n            <h1 id=\"apod-title\">{this.props.img.title}</h1>\n            <article>{this.props.img.explanation}</article>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nclass MovieDetail extends Component {\n  render() {\n    if (!this.props.movie) {\n      return null;\n    }\n\n    return (\n      <div key={this.props.movie.title} className=\"text-center\">\n        <div className=\"card shadow\">\n          <img\n            src={`http://image.tmdb.org/t/p/w185/${this.props.movie.poster_path}`}\n            className=\"card-img-top\"\n          />\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{this.props.movie.title}</h5>\n            <p className=\"card-text\">{this.props.movie.overview}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Asteroid extends Component {\n  render() {\n    var str = \"\";\n    var is_precent = 0.3;\n    if (this.props.asteriod.is_hazardous) {\n      str = \"Yes\";\n      is_precent = 0.8;\n    } else {\n      str = \"No\";\n    }\n\n    var dia_precent =\n      (this.props.asteriod.estimated_diameter_max -\n        this.props.asteriod.min_diameter +\n        0.01) /\n      (this.props.asteriod.max_diameter - this.props.asteriod.min_diameter);\n\n    var dis_percent =\n      1 -\n      (this.props.asteriod.miss_distance - this.props.asteriod.min_dis) /\n        (this.props.asteriod.max_dis - this.props.asteriod.min_dis);\n\n    var tdStyle = {\n      background: \"RGB(0,255,255,\" + dia_precent + \")\"\n    };\n\n    var isStyle = {\n      background: \"RGB(255,0,0,\" + is_precent + \")\"\n    };\n\n    var disStyle = {\n      background: \"RGB(255,0,255,\" + dis_percent + \")\"\n    };\n\n    return (\n      <tr key={this.props.asteriod.name}>\n        <td>{this.props.asteriod.date}</td>\n        <td>{this.props.asteriod.name}</td>\n        <td style={tdStyle}>{this.props.asteriod.estimated_diameter_max}</td>\n        <td style={disStyle}>{this.props.asteriod.miss_distance}</td>\n        <td style={isStyle}>{str}</td>\n      </tr>\n    );\n  }\n}\n\nclass Poster extends Component {\n  render() {\n    return (\n      <div key={this.props.movie.title} className=\"col-3 text-center\">\n        <img\n          onMouseEnter={e => {\n            this.props.whenClicked(this.props.movie);\n          }}\n          src={`http://image.tmdb.org/t/p/w185/${this.props.movie.poster_path}`}\n          className=\"img-fluid\"\n          alt={`Poster for ${this.props.movie.title}`}\n        ></img>\n        <p>{this.props.movie.release_date.substr(0, 4)}</p>\n      </div>\n    );\n  }\n}\n\nvar diameter_max = 0;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOfMovies: [],\n      selectedMovie: null,\n      listOfAsteroids: [],\n      selectedAsteroids: null,\n      imgURL: \"\",\n      apodss: null,\n      type: \"\",\n      title: \"\",\n      explanation: \"\",\n      max_diameter: 0,\n      min_diameter: 100000000000000,\n      max_dis: 0,\n      min_dis: 100000000000000,\n      logo:\n        \"https://www.nasa.gov/sites/default/files/thumbnails/image/nasa-logo-web-rgb.png\"\n    };\n  }\n\n  componentDidMount() {\n    const url = this.urlForTMDB(\"now_playing\");\n\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    var yyyy = today.getFullYear();\n\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    const baseURL = \"https://api.nasa.gov/planetary/apod?date=\";\n    const api_key = \"api_key=BWwii9sVzbeaMDa4dfvjdvgT5Q30VgEgdyRmibIf\";\n    const imgurl = `${baseURL}${today}&${api_key}`;\n    fetch(imgurl)\n      .then(r => r.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ imgURL: data.url });\n        var apod1 = {\n          url: \"\",\n          type: \"\",\n          title: \"\",\n          explanation: \"\"\n        };\n        console.log(\"here it is a\");\n        console.log(data[\"media_type\"]);\n        apod1.url = data.url;\n        apod1.type = data[\"media_type\"];\n        apod1.title = data.title;\n        apod1.explanation = data.explanation;\n        this.setState({ apodss: apod1 });\n        this.setState({ type: data[\"media_type\"] });\n        this.setState({ title: data.title });\n        this.setState({ explanation: data.explanation });\n      });\n\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n    var yyyy = today.getFullYear();\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n\n    var end_day = new Date();\n    end_day.setDate(end_day.getDate() + 6);\n    var edd = String(end_day.getDate()).padStart(2, \"0\");\n    var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n    var eyyyy = end_day.getFullYear();\n    end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n\n    const url_aster_all = this.urlForAsterInfo(today, end_day);\n\n    fetch(url)\n      .then(r => r.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ listOfMovies: data.results });\n      });\n\n    fetch(url_aster_all)\n      .then(r => r.json())\n      .then(data => {\n        var asters = {\n          info: []\n        };\n        var j = 0;\n        while (j < 7) {\n          var end_day = new Date();\n          end_day.setDate(end_day.getDate() + j);\n          var edd = String(end_day.getDate()).padStart(2, \"0\");\n          var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n          var eyyyy = end_day.getFullYear();\n          end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n          for (var i in data.near_earth_objects[end_day]) {\n            var item = data.near_earth_objects[end_day][i];\n\n            if (\n              parseFloat(\n                item.estimated_diameter.meters.estimated_diameter_max\n              ) > this.state.max_diameter\n            ) {\n              this.setState({\n                max_diameter: parseFloat(\n                  item.estimated_diameter.meters.estimated_diameter_max\n                )\n              });\n            }\n\n            if (\n              parseFloat(\n                item.estimated_diameter.meters.estimated_diameter_max\n              ) < this.state.min_diameter\n            ) {\n              this.setState({\n                min_diameter: parseFloat(\n                  item.estimated_diameter.meters.estimated_diameter_max\n                )\n              });\n            }\n\n            if (\n              parseFloat(\n                item.close_approach_data[\"0\"].miss_distance.kilometers\n              ) > this.state.max_dis\n            ) {\n              this.setState({\n                max_dis: parseFloat(\n                  item.close_approach_data[\"0\"].miss_distance.kilometers\n                )\n              });\n            }\n\n            if (\n              parseFloat(\n                item.close_approach_data[\"0\"].miss_distance.kilometers\n              ) < this.state.min_dis\n            ) {\n              this.setState({\n                min_dis: parseFloat(\n                  item.close_approach_data[\"0\"].miss_distance.kilometers\n                )\n              });\n            }\n\n            asters.info.push({\n              date: end_day,\n              name: item.name.substr(1, item.name.length - 2),\n              estimated_diameter_max:\n                item.estimated_diameter.meters.estimated_diameter_max,\n              is_hazardous: item.is_potentially_hazardous_asteroid,\n              close_approach_data: item.close_approach_data,\n              miss_distance:\n                item.close_approach_data[\"0\"].miss_distance.kilometers,\n              max_diameter: 0,\n              min_diameter: 10000000,\n              min_dis: 1000000000,\n              max_dis: 0\n            });\n          }\n          j = j + 1;\n        }\n\n        for (var i in asters.info) {\n          asters.info[i].max_diameter = this.state.max_diameter;\n          asters.info[i].min_diameter = this.state.min_diameter;\n          asters.info[i].min_dis = this.state.min_dis;\n          asters.info[i].max_dis = this.state.max_dis;\n          console.log(asters.info[i]);\n        }\n\n        console.log(asters);\n        console.log(\"max disa\");\n        console.log(window.diameter_max);\n        //console.log(asters.info[item]);\n        //console.log(this.flatten(data[\"near_earth_objects\"]))\n        this.setState({ listOfAsteroids: asters.info });\n      });\n  }\n  // let names = [\"Jeff\", \"Ariana\", \"Bob\"]\n  // let length_of_names = names.map(function(item) {\n  //   return item.length;\n  // })  // [4, 6, 3]\n\n  handlePosterClick = movie => {\n    this.setState({ selectedMovie: movie });\n  };\n  render() {\n    const posters = this.state.listOfMovies.map(movie => {\n      return <Poster movie={movie} whenClicked={this.handlePosterClick} />;\n    });\n    const asteriods = this.state.listOfAsteroids.map(asteriod => {\n      return <Asteroid asteriod={asteriod} />;\n    });\n\n    const apodPass = {\n      url: this.state.imgURL,\n      type: this.state.type,\n      title: this.state.title,\n      explanation: this.state.explanation\n    };\n\n    return (\n      <div className=\"container\">\n        <div id=\"header-logo\">\n          <img\n            id=\"img-background\"\n            src=\"https://apod.nasa.gov/apod/image/2002/CenA_hst1000.jpg\"\n          />\n          <img\n            id=\"img-logo\"\n            src=\"https://www.nasa.gov/sites/default/files/thumbnails/image/nasa-logo-web-rgb.png\"\n          />\n          <h1 id=\"welcome-text\">\n            Welcome to\n            <br />\n            Asteroid Infomation Site.\n          </h1>\n          <h2 id=\"text-line\">___</h2>\n          <h2 id=\"introduction-text\">\n            The website provides information <br />\n            on the asteroids coming in the next 7 days.\n          </h2>\n        </div>\n\n        <div>\n          <PictureOfDay img={apodPass} />\n        </div>\n        <div className=\"row mb-5\">\n          <p id=\"note\">Click button to sort data</p>\n          <div id=\"buttons\" className=\"col\">\n            <p id=\"note\" className=\"ml-3 left\">\n              Click button to sort data\n            </p>\n            <button\n              onClick={this.handleDateClick}\n              className=\"btn btn-secondary\"\n              href=\"#\"\n            >\n              Date\n            </button>\n            <button\n              onClick={this.handleHazardousClick}\n              className=\"ml-3 btn btn-secondary\"\n              href=\"#\"\n            >\n              Is Hazardous\n            </button>\n            <button\n              onClick={this.handleMissDisClick}\n              className=\"ml-3 btn btn-secondary\"\n              href=\"#\"\n            >\n              Miss Distance\n            </button>\n            <button\n              onClick={this.handleMaxDiameterClick}\n              className=\"ml-3 btn btn-secondary\"\n              href=\"#\"\n            >\n              Max Estimated Diameter\n            </button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div id=\"wall\" className=\"table-responsive col center\">\n            <Table\n              className=\"table col center\"\n              id=\"asteriods-list\"\n              bordered\n              variant=\"dark\"\n            >\n              <thead id=\"list-title\">\n                <th>Data Date</th>\n                <th>Asteroid Name</th>\n                <th id=\"th-1\">Max Estimated Diameter (m)</th>\n                <th id=\"th-2\">Miss Distance (km)</th>\n                <th id=\"th-3\">Is Hazardous</th>\n              </thead>\n              <tbody id=\"list-body\">{asteriods}</tbody>\n            </Table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  handleNowPlayingClick = e => {\n    e.preventDefault();\n    const url = this.urlForTMDB(\"now_playing\");\n\n    fetch(url)\n      .then(r => r.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ listOfMovies: data.results });\n        // this.state.listOfMovies = data.results\n      });\n  };\n  handleTopRatedClick = e => {\n    e.preventDefault();\n    const url = this.urlForTMDB(\"top_rated\");\n\n    fetch(url)\n      .then(r => r.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ listOfMovies: data.results });\n        // this.state.listOfMovies = data.results\n      });\n  };\n\n  compareDate(a, b) {\n    // Use toUpperCase() to ignore character casing\n    var comparison;\n    if (a.date > b.date) {\n      comparison = -1;\n    } else {\n      comparison = 1;\n    }\n    return comparison;\n  }\n  handleDateClick = e => {\n    e.preventDefault();\n\n    this.state.listOfAsteroids.sort(this.compareDate);\n\n    //console.log(asters.info[item]);\n    //console.log(this.flatten(data[\"near_earth_objects\"]))\n    this.setState({ listOfAsteroids: this.state.listOfAsteroids });\n  };\n\n  compareHazardous(a, b) {\n    // Use toUpperCase() to ignore character casing\n    var comparison;\n    if (a.is_hazardous > b.is_hazardous) {\n      comparison = -1;\n    } else {\n      comparison = 1;\n    }\n    return comparison;\n  }\n\n  handleHazardousClick = e => {\n    e.preventDefault();\n\n    this.state.listOfAsteroids.sort(this.compareHazardous);\n\n    //console.log(asters.info[item]);\n    //console.log(this.flatten(data[\"near_earth_objects\"]))\n    this.setState({ listOfAsteroids: this.state.listOfAsteroids });\n\n    // var today = new Date();\n    // var dd = String(today.getDate()).padStart(2, \"0\");\n    // var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n    // var yyyy = today.getFullYear();\n    // today = yyyy + \"-\" + mm + \"-\" + dd;\n\n    // var end_day = new Date();\n    // end_day.setDate(end_day.getDate() + 6);\n    // var edd = String(end_day.getDate()).padStart(2, \"0\");\n    // var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n    // var eyyyy = end_day.getFullYear();\n    // end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n\n    // const url_aster_all = this.urlForAsterInfo(today, end_day);\n\n    // fetch(url_aster_all)\n    //   .then(r => r.json())\n    //   .then(data => {\n    //     console.log(data);\n    //     console.log(data.near_earth_objects[\"2020-02-23\"]);\n    //     var asters = {\n    //       info: []\n    //     };\n    //     var j = 0;\n    //     while (j < 7) {\n    //       var end_day = new Date();\n    //       end_day.setDate(end_day.getDate() + j);\n    //       var edd = String(end_day.getDate()).padStart(2, \"0\");\n    //       var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n    //       var eyyyy = end_day.getFullYear();\n    //       end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n    //       for (var i in data.near_earth_objects[end_day]) {\n    //         var item = data.near_earth_objects[end_day][i];\n    //         console.log(item.close_approach_data[\"0\"].miss_distance.kilometers);\n    //         asters.info.push({\n    //           date: end_day,\n    //           name: item.name.substr(1, item.name.length - 2),\n    //           estimated_diameter_max:\n    //             item.estimated_diameter.meters.estimated_diameter_max,\n    //           is_hazardous: item.is_potentially_hazardous_asteroid,\n    //           close_approach_data: item.close_approach_data,\n    //           miss_distance:\n    //             item.close_approach_data[\"0\"].miss_distance.kilometers\n    //         });\n    //       }\n    //       j = j + 1;\n    //     }\n\n    //     // asters.info.sort(this.compareHazardous);\n\n    //     this.state.listOfAsteroids.sort(this.compareHazardous);\n\n    //     console.log(asters);\n    //     //console.log(asters.info[item]);\n    //     //console.log(this.flatten(data[\"near_earth_objects\"]))\n    //     this.setState({ listOfAsteroids: this.state.listOfAsteroids });\n    //   });\n  };\n\n  compareMaxDiameter(a, b) {\n    // Use toUpperCase() to ignore character casing\n    const bandA = parseFloat(a.estimated_diameter_max);\n    const bandB = parseFloat(b.estimated_diameter_max);\n\n    let comparison = 0;\n    if (bandA > bandB) {\n      comparison = -1;\n    } else if (bandA < bandB) {\n      comparison = 1;\n    }\n    return comparison;\n  }\n\n  handleMaxDiameterClick = e => {\n    e.preventDefault();\n\n    this.state.listOfAsteroids.sort(this.compareMaxDiameter);\n\n    //console.log(asters.info[item]);\n    //console.log(this.flatten(data[\"near_earth_objects\"]))\n    this.setState({ listOfAsteroids: this.state.listOfAsteroids });\n\n    // var today = new Date();\n    // var dd = String(today.getDate()).padStart(2, \"0\");\n    // var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n    // var yyyy = today.getFullYear();\n    // today = yyyy + \"-\" + mm + \"-\" + dd;\n\n    // var end_day = new Date();\n    // end_day.setDate(end_day.getDate() + 6);\n    // var edd = String(end_day.getDate()).padStart(2, \"0\");\n    // var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n    // var eyyyy = end_day.getFullYear();\n    // end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n\n    // const url_aster_all = this.urlForAsterInfo(today, end_day);\n\n    // fetch(url_aster_all)\n    //   .then(r => r.json())\n    //   .then(data => {\n    //     var asters = {\n    //       info: []\n    //     };\n    //     var j = 0;\n    //     while (j < 7) {\n    //       var end_day = new Date();\n    //       end_day.setDate(end_day.getDate() + j);\n    //       var edd = String(end_day.getDate()).padStart(2, \"0\");\n    //       var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n    //       var eyyyy = end_day.getFullYear();\n    //       end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n    //       for (var i in data.near_earth_objects[end_day]) {\n    //         var item = data.near_earth_objects[end_day][i];\n    //         asters.info.push({\n    //           date: end_day,\n    //           name: item.name.substr(1, item.name.length - 2),\n    //           estimated_diameter_max:\n    //             item.estimated_diameter.meters.estimated_diameter_max,\n    //           is_hazardous: item.is_potentially_hazardous_asteroid,\n    //           close_approach_data: item.close_approach_data,\n    //           miss_distance:\n    //             item.close_approach_data[\"0\"].miss_distance.kilometers\n    //         });\n    //       }\n    //       j = j + 1;\n    //     }\n\n    //     asters.info.sort(this.compareMaxDiameter);\n\n    //     var topTen = {\n    //       info: []\n    //     };\n    //     var cnt = 0;\n\n    //     console.log(asters);\n\n    //     for (var i in asters.info) {\n    //       var item = asters.info[i];\n    //       topTen.info.push(asters.info[i]);\n    //       cnt = cnt + 1;\n    //       if (cnt >= 10) {\n    //         break;\n    //       }\n    //     }\n\n    //     //console.log(asters.info[item]);\n    //     //console.log(this.flatten(data[\"near_earth_objects\"]))\n    //     this.setState({ listOfAsteroids: topTen.info });\n    //   });\n  };\n\n  compareMissDis(a, b) {\n    // Use toUpperCase() to ignore character casing\n    const bandA = parseFloat(a.miss_distance);\n    const bandB = parseFloat(b.miss_distance);\n\n    let comparison = 0;\n    if (bandA > bandB) {\n      comparison = 1;\n    } else if (bandA < bandB) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n\n  handleMissDisClick = e => {\n    e.preventDefault();\n\n    this.state.listOfAsteroids.sort(this.compareMissDis);\n\n    //console.log(asters.info[item]);\n    //console.log(this.flatten(data[\"near_earth_objects\"]))\n    this.setState({ listOfAsteroids: this.state.listOfAsteroids });\n\n    // var today = new Date();\n    // var dd = String(today.getDate()).padStart(2, \"0\");\n    // var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n    // var yyyy = today.getFullYear();\n    // today = yyyy + \"-\" + mm + \"-\" + dd;\n\n    // var end_day = new Date();\n    // end_day.setDate(end_day.getDate() + 6);\n    // var edd = String(end_day.getDate()).padStart(2, \"0\");\n    // var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n    // var eyyyy = end_day.getFullYear();\n    // end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n\n    // const url_aster_all = this.urlForAsterInfo(today, end_day);\n\n    // fetch(url_aster_all)\n    //   .then(r => r.json())\n    //   .then(data => {\n    //     console.log(data);\n    //     console.log(data.near_earth_objects[\"2020-02-23\"]);\n    //     var asters = {\n    //       info: []\n    //     };\n    //     var j = 0;\n    //     while (j < 7) {\n    //       var end_day = new Date();\n    //       end_day.setDate(end_day.getDate() + j);\n    //       var edd = String(end_day.getDate()).padStart(2, \"0\");\n    //       var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n    //       var eyyyy = end_day.getFullYear();\n    //       end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n    //       for (var i in data.near_earth_objects[end_day]) {\n    //         var item = data.near_earth_objects[end_day][i];\n    //         console.log(item.close_approach_data[\"0\"].miss_distance.kilometers);\n    //         asters.info.push({\n    //           date: end_day,\n    //           name: item.name.substr(1, item.name.length - 2),\n    //           estimated_diameter_max:\n    //             item.estimated_diameter.meters.estimated_diameter_max,\n    //           is_hazardous: item.is_potentially_hazardous_asteroid,\n    //           close_approach_data: item.close_approach_data,\n    //           miss_distance:\n    //             item.close_approach_data[\"0\"].miss_distance.kilometers\n    //         });\n    //       }\n    //       j = j + 1;\n    //     }\n\n    //     asters.info.sort(this.compareMissDis);\n\n    //     console.log(asters);\n    //     //console.log(asters.info[item]);\n    //     //console.log(this.flatten(data[\"near_earth_objects\"]))\n    //     this.setState({ listOfAsteroids: asters.info });\n    //   });\n  };\n\n  displayImg = data => {\n    if (!data) return;\n    this.setState({ imgURL: data.url });\n    var apod = {\n      url: \"\",\n      type: \"\"\n    };\n    apod.url = data.url;\n    apod.type = data[\"media_type\"];\n    this.setState({ apodss: apod });\n    this.setState({ type: data[\"media_type\"] });\n  };\n\n  getAPOD = () => {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    var yyyy = today.getFullYear();\n\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    const baseURL = \"https://api.nasa.gov/planetary/apod?date=\";\n    const api_key = \"api_key=BWwii9sVzbeaMDa4dfvjdvgT5Q30VgEgdyRmibIf\";\n    const url = `${baseURL}${today}&${api_key}`;\n    return fetch(url)\n      .then(r => r.json())\n      .then(this.displayImg);\n  };\n\n  urlForTMDB = resource => {\n    const api_key_param = \"api_key=bde024f3eb43f597aafe01ed9c9098c6\";\n    const language_param = \"language=en-US\";\n    const region_param = \"region=US\";\n    const filter_param = \"include_adult=false\";\n    const base_url = `https://api.themoviedb.org/3/movie/${resource}`;\n    const api_url = `${base_url}?${api_key_param}&${language_param}&${region_param}&${filter_param}`;\n    return api_url;\n  };\n\n  urlForAsterInfo = (start_date, end_date) => {\n    const base_url = \"https://api.nasa.gov/neo/rest/v1/feed?\";\n    const api_key = \"api_key=BWwii9sVzbeaMDa4dfvjdvgT5Q30VgEgdyRmibIf\";\n    const api_url = `${base_url}?start_date=${start_date}&end_date=${end_date}&${api_key}`;\n    return api_url;\n  };\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Wazzzzzzup! Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//     );\n\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}