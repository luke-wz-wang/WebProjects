{"ast":null,"code":"var _jsxFileName = \"/Users/sinzevivens/Documents/GitHub/mpcs52553/hw4/hw4-React-Bootstrap/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Table from \"react-bootstrap/Table\";\nimport \"./App.css\";\nimport StarfieldAnimation from \"react-starfield-animation\";\n\nclass Star extends Component {\n  render() {\n    return React.createElement(StarfieldAnimation, {\n      style: {\n        position: \"absolute\",\n        width: \"100%\",\n        height: \"600px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass PictureOfDay extends Component {\n  render() {\n    console.log(this.props);\n    console.log(\"what i need\");\n    console.log(this.props.img.url);\n\n    if (!this.props) {\n      return null;\n    }\n\n    if (new String(this.props.img.type).valueOf() == new String(\"video\").valueOf()) {\n      console.log(\"is a video\");\n      return React.createElement(\"div\", {\n        id: \"video\",\n        className: \"header row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"video-content\",\n        className: \"header-img col-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"iframe\", {\n        width: \"100%\",\n        height: \"60%\",\n        src: this.props.img.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"video-text\",\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        id: \"video-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.props.img.title), React.createElement(\"article\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.props.img.explanation)));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"header row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header-img col-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        width: \"100%\",\n        height: \"60%\",\n        src: this.props.img.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"apod-text\",\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        id: \"apod-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.props.img.title), React.createElement(\"article\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.props.img.explanation)));\n    }\n  }\n\n}\n\nclass Asteroid extends Component {\n  render() {\n    var str = \"\";\n    var is_precent = 0.3;\n\n    if (this.props.asteriod.is_hazardous) {\n      str = \"Yes\";\n      is_precent = 0.8;\n    } else {\n      str = \"No\";\n    }\n\n    var dia_precent = (this.props.asteriod.estimated_diameter_max - this.props.asteriod.min_diameter + 0.01) / (this.props.asteriod.max_diameter - this.props.asteriod.min_diameter);\n    var dis_percent = 1 - (this.props.asteriod.miss_distance - this.props.asteriod.min_dis) / (this.props.asteriod.max_dis - this.props.asteriod.min_dis);\n    var tdStyle = {\n      background: \"RGB(0,255,255,\" + dia_precent + \")\"\n    };\n    var isStyle = {\n      background: \"RGB(255,0,0,\" + is_precent + \")\"\n    };\n    var disStyle = {\n      background: \"RGB(255,0,255,\" + dis_percent + \")\"\n    };\n    return React.createElement(\"tr\", {\n      key: this.props.asteriod.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.props.asteriod.date), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.props.asteriod.name), React.createElement(\"td\", {\n      style: tdStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.props.asteriod.estimated_diameter_max), React.createElement(\"td\", {\n      style: disStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.props.asteriod.miss_distance), React.createElement(\"td\", {\n      style: isStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, str));\n  }\n\n}\n\nvar diameter_max = 0;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePosterClick = movie => {\n      this.setState({\n        selectedMovie: movie\n      });\n    };\n\n    this.handleNowPlayingClick = e => {\n      e.preventDefault();\n      const url = this.urlForTMDB(\"now_playing\");\n      fetch(url).then(r => r.json()).then(data => {\n        console.log(data);\n        this.setState({\n          listOfMovies: data.results\n        }); // this.state.listOfMovies = data.results\n      });\n    };\n\n    this.handleTopRatedClick = e => {\n      e.preventDefault();\n      const url = this.urlForTMDB(\"top_rated\");\n      fetch(url).then(r => r.json()).then(data => {\n        console.log(data);\n        this.setState({\n          listOfMovies: data.results\n        }); // this.state.listOfMovies = data.results\n      });\n    };\n\n    this.handleDateClick = e => {\n      e.preventDefault();\n      this.state.listOfAsteroids.sort(this.compareDate); //console.log(asters.info[item]);\n      //console.log(this.flatten(data[\"near_earth_objects\"]))\n\n      this.setState({\n        listOfAsteroids: this.state.listOfAsteroids\n      });\n    };\n\n    this.handleHazardousClick = e => {\n      e.preventDefault();\n      this.state.listOfAsteroids.sort(this.compareHazardous);\n      this.setState({\n        listOfAsteroids: this.state.listOfAsteroids\n      });\n    };\n\n    this.handleMaxDiameterClick = e => {\n      e.preventDefault();\n      this.state.listOfAsteroids.sort(this.compareMaxDiameter);\n      this.setState({\n        listOfAsteroids: this.state.listOfAsteroids\n      });\n    };\n\n    this.handleMissDisClick = e => {\n      e.preventDefault();\n      this.state.listOfAsteroids.sort(this.compareMissDis);\n      this.setState({\n        listOfAsteroids: this.state.listOfAsteroids\n      });\n    };\n\n    this.displayImg = data => {\n      if (!data) return;\n      this.setState({\n        imgURL: data.url\n      });\n      var apod = {\n        url: \"\",\n        type: \"\"\n      };\n      apod.url = data.url;\n      apod.type = data[\"media_type\"];\n      this.setState({\n        apodss: apod\n      });\n      this.setState({\n        type: data[\"media_type\"]\n      });\n    };\n\n    this.getAPOD = () => {\n      var today = new Date();\n      var dd = String(today.getDate()).padStart(2, \"0\");\n      var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n\n      var yyyy = today.getFullYear();\n      today = yyyy + \"-\" + mm + \"-\" + dd;\n      const baseURL = \"https://api.nasa.gov/planetary/apod?date=\";\n      const api_key = \"api_key=BWwii9sVzbeaMDa4dfvjdvgT5Q30VgEgdyRmibIf\";\n      const url = `${baseURL}${today}&${api_key}`;\n      return fetch(url).then(r => r.json()).then(this.displayImg);\n    };\n\n    this.urlForTMDB = resource => {\n      const api_key_param = \"api_key=bde024f3eb43f597aafe01ed9c9098c6\";\n      const language_param = \"language=en-US\";\n      const region_param = \"region=US\";\n      const filter_param = \"include_adult=false\";\n      const base_url = `https://api.themoviedb.org/3/movie/${resource}`;\n      const api_url = `${base_url}?${api_key_param}&${language_param}&${region_param}&${filter_param}`;\n      return api_url;\n    };\n\n    this.urlForAsterInfo = (start_date, end_date) => {\n      const base_url = \"https://api.nasa.gov/neo/rest/v1/feed?\";\n      const api_key = \"api_key=BWwii9sVzbeaMDa4dfvjdvgT5Q30VgEgdyRmibIf\";\n      const api_url = `${base_url}?start_date=${start_date}&end_date=${end_date}&${api_key}`;\n      return api_url;\n    };\n\n    this.state = {\n      listOfMovies: [],\n      selectedMovie: null,\n      listOfAsteroids: [],\n      selectedAsteroids: null,\n      imgURL: \"\",\n      apodss: null,\n      type: \"\",\n      title: \"\",\n      explanation: \"\",\n      max_diameter: 0,\n      min_diameter: 100000000000000,\n      max_dis: 0,\n      min_dis: 100000000000000,\n      logo: \"https://www.nasa.gov/sites/default/files/thumbnails/image/nasa-logo-web-rgb.png\"\n    };\n  }\n\n  componentDidMount() {\n    const url = this.urlForTMDB(\"now_playing\");\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n\n    var yyyy = today.getFullYear();\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    const baseURL = \"https://api.nasa.gov/planetary/apod?date=\";\n    const api_key = \"api_key=BWwii9sVzbeaMDa4dfvjdvgT5Q30VgEgdyRmibIf\";\n    const imgurl = `${baseURL}${today}&${api_key}`;\n    fetch(imgurl).then(r => r.json()).then(data => {\n      console.log(data);\n      this.setState({\n        imgURL: data.url\n      });\n      var apod1 = {\n        url: \"\",\n        type: \"\",\n        title: \"\",\n        explanation: \"\"\n      };\n      apod1.url = data.url;\n      apod1.type = data[\"media_type\"];\n      apod1.title = data.title;\n      apod1.explanation = data.explanation;\n      this.setState({\n        apodss: apod1\n      });\n      this.setState({\n        type: data[\"media_type\"]\n      });\n      this.setState({\n        title: data.title\n      });\n      this.setState({\n        explanation: data.explanation\n      });\n    });\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n    var yyyy = today.getFullYear();\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    var end_day = new Date();\n    end_day.setDate(end_day.getDate() + 6);\n    var edd = String(end_day.getDate()).padStart(2, \"0\");\n    var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n    var eyyyy = end_day.getFullYear();\n    end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n    const url_aster_all = this.urlForAsterInfo(today, end_day);\n    fetch(url).then(r => r.json()).then(data => {\n      console.log(data);\n      this.setState({\n        listOfMovies: data.results\n      });\n    });\n    fetch(url_aster_all).then(r => r.json()).then(data => {\n      var asters = {\n        info: []\n      };\n      var j = 0;\n\n      while (j < 7) {\n        var end_day = new Date();\n        end_day.setDate(end_day.getDate() + j);\n        var edd = String(end_day.getDate()).padStart(2, \"0\");\n        var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n        var eyyyy = end_day.getFullYear();\n        end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n\n        for (var i in data.near_earth_objects[end_day]) {\n          var item = data.near_earth_objects[end_day][i];\n\n          if (parseFloat(item.estimated_diameter.meters.estimated_diameter_max) > this.state.max_diameter) {\n            this.setState({\n              max_diameter: parseFloat(item.estimated_diameter.meters.estimated_diameter_max)\n            });\n          }\n\n          if (parseFloat(item.estimated_diameter.meters.estimated_diameter_max) < this.state.min_diameter) {\n            this.setState({\n              min_diameter: parseFloat(item.estimated_diameter.meters.estimated_diameter_max)\n            });\n          }\n\n          if (parseFloat(item.close_approach_data[\"0\"].miss_distance.kilometers) > this.state.max_dis) {\n            this.setState({\n              max_dis: parseFloat(item.close_approach_data[\"0\"].miss_distance.kilometers)\n            });\n          }\n\n          if (parseFloat(item.close_approach_data[\"0\"].miss_distance.kilometers) < this.state.min_dis) {\n            this.setState({\n              min_dis: parseFloat(item.close_approach_data[\"0\"].miss_distance.kilometers)\n            });\n          }\n\n          asters.info.push({\n            date: end_day,\n            // name: item.name.substr(1, item.name.length - 2),\n            name: item.name,\n            estimated_diameter_max: item.estimated_diameter.meters.estimated_diameter_max,\n            is_hazardous: item.is_potentially_hazardous_asteroid,\n            close_approach_data: item.close_approach_data,\n            miss_distance: item.close_approach_data[\"0\"].miss_distance.kilometers,\n            max_diameter: 0,\n            min_diameter: 10000000,\n            min_dis: 1000000000,\n            max_dis: 0\n          });\n        }\n\n        j = j + 1;\n      }\n\n      for (var i in asters.info) {\n        asters.info[i].max_diameter = this.state.max_diameter;\n        asters.info[i].min_diameter = this.state.min_diameter;\n        asters.info[i].min_dis = this.state.min_dis;\n        asters.info[i].max_dis = this.state.max_dis;\n        console.log(asters.info[i]);\n      }\n\n      console.log(asters);\n      console.log(\"max disa\");\n      console.log(window.diameter_max); //console.log(asters.info[item]);\n      //console.log(this.flatten(data[\"near_earth_objects\"]))\n\n      this.setState({\n        listOfAsteroids: asters.info\n      });\n    });\n  }\n\n  render() {\n    const asteriods = this.state.listOfAsteroids.map(asteriod => {\n      return React.createElement(Asteroid, {\n        asteriod: asteriod,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      });\n    });\n    const apodPass = {\n      url: this.state.imgURL,\n      type: this.state.type,\n      title: this.state.title,\n      explanation: this.state.explanation\n    };\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"header-logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"img-background\",\n      src: \"https://apod.nasa.gov/apod/image/2002/CenA_hst1000.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      id: \"img-logo\",\n      src: \"https://www.nasa.gov/sites/default/files/thumbnails/image/nasa-logo-web-rgb.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }), \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \" \", React.createElement(Star, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      id: \"welcome-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"Welcome to\", \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \" \", React.createElement(Star, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }), \"Asteroid Infomation Site.\"), React.createElement(Star, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      id: \"text-line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"___\"), React.createElement(\"h2\", {\n      id: \"introduction-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"The website provides information \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }), \"on the asteroids coming in the next 7 days.\"), React.createElement(Star, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(PictureOfDay, {\n      img: apodPass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"note-article\",\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      id: \"note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, \"Click button to sort data\")), React.createElement(\"div\", {\n      id: \"buttons\",\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleDateClick,\n      className: \"btn btn-secondary\",\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, \"Most Recent\"), React.createElement(\"button\", {\n      onClick: this.handleMaxDiameterClick,\n      className: \"ml-3 btn btn-secondary\",\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"Max Estimated Diameter\"), React.createElement(\"button\", {\n      onClick: this.handleMissDisClick,\n      className: \"ml-3 btn btn-secondary\",\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, \"Miss Distance\"), React.createElement(\"button\", {\n      onClick: this.handleHazardousClick,\n      className: \"ml-3 btn btn-secondary\",\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"Is Hazardous\"))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"wall\",\n      className: \"table-responsive col center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: \"table col center\",\n      id: \"asteriods-list\",\n      bordered: true,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      id: \"list-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"Data Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, \"Asteroid Name\"), React.createElement(\"th\", {\n      id: \"th-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, \"Max Estimated Diameter (m)\"), React.createElement(\"th\", {\n      id: \"th-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, \"Miss Distance (km)\"), React.createElement(\"th\", {\n      id: \"th-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \"Is Hazardous\")), React.createElement(\"tbody\", {\n      id: \"list-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, asteriods)))));\n  }\n\n  compareDate(a, b) {\n    // Use toUpperCase() to ignore character casing\n    var comparison;\n\n    if (a.date > b.date) {\n      comparison = -1;\n    } else {\n      comparison = 1;\n    }\n\n    return comparison;\n  }\n\n  compareHazardous(a, b) {\n    // Use toUpperCase() to ignore character casing\n    var comparison;\n\n    if (a.is_hazardous > b.is_hazardous) {\n      comparison = -1;\n    } else {\n      comparison = 1;\n    }\n\n    return comparison;\n  }\n\n  compareMaxDiameter(a, b) {\n    // Use toUpperCase() to ignore character casing\n    const bandA = parseFloat(a.estimated_diameter_max);\n    const bandB = parseFloat(b.estimated_diameter_max);\n    let comparison = 0;\n\n    if (bandA > bandB) {\n      comparison = -1;\n    } else if (bandA < bandB) {\n      comparison = 1;\n    }\n\n    return comparison;\n  }\n\n  compareMissDis(a, b) {\n    // Use toUpperCase() to ignore character casing\n    const bandA = parseFloat(a.miss_distance);\n    const bandB = parseFloat(b.miss_distance);\n    let comparison = 0;\n\n    if (bandA > bandB) {\n      comparison = 1;\n    } else if (bandA < bandB) {\n      comparison = -1;\n    }\n\n    return comparison;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sinzevivens/Documents/GitHub/mpcs52553/hw4/hw4-React-Bootstrap/src/App.js"],"names":["React","Component","Table","StarfieldAnimation","Star","render","position","width","height","PictureOfDay","console","log","props","img","url","String","type","valueOf","title","explanation","Asteroid","str","is_precent","asteriod","is_hazardous","dia_precent","estimated_diameter_max","min_diameter","max_diameter","dis_percent","miss_distance","min_dis","max_dis","tdStyle","background","isStyle","disStyle","name","date","diameter_max","App","constructor","handlePosterClick","movie","setState","selectedMovie","handleNowPlayingClick","e","preventDefault","urlForTMDB","fetch","then","r","json","data","listOfMovies","results","handleTopRatedClick","handleDateClick","state","listOfAsteroids","sort","compareDate","handleHazardousClick","compareHazardous","handleMaxDiameterClick","compareMaxDiameter","handleMissDisClick","compareMissDis","displayImg","imgURL","apod","apodss","getAPOD","today","Date","dd","getDate","padStart","mm","getMonth","yyyy","getFullYear","baseURL","api_key","resource","api_key_param","language_param","region_param","filter_param","base_url","api_url","urlForAsterInfo","start_date","end_date","selectedAsteroids","logo","componentDidMount","imgurl","apod1","end_day","setDate","edd","emm","eyyyy","url_aster_all","asters","info","j","i","near_earth_objects","item","parseFloat","estimated_diameter","meters","close_approach_data","kilometers","push","is_potentially_hazardous_asteroid","window","asteriods","map","apodPass","a","b","comparison","bandA","bandB"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Table from \"react-bootstrap/Table\";\n\nimport \"./App.css\";\n\nimport StarfieldAnimation from \"react-starfield-animation\";\n\nclass Star extends Component {\n  render() {\n    return (\n      <StarfieldAnimation\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"600px\"\n        }}\n      />\n    );\n  }\n}\n\nclass PictureOfDay extends Component {\n  render() {\n    console.log(this.props);\n    console.log(\"what i need\");\n    console.log(this.props.img.url);\n\n    if (!this.props) {\n      return null;\n    }\n    if (\n      new String(this.props.img.type).valueOf() == new String(\"video\").valueOf()\n    ) {\n      console.log(\"is a video\");\n      return (\n        <div id=\"video\" className=\"header row\">\n          <div id=\"video-content\" className=\"header-img col-4\">\n            <iframe width=\"100%\" height=\"60%\" src={this.props.img.url}></iframe>\n          </div>\n          <div id=\"video-text\" className=\"col\">\n            <h1 id=\"video-title\">{this.props.img.title}</h1>\n            <article>{this.props.img.explanation}</article>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"header row\">\n          <div className=\"header-img col-4\">\n            <img width=\"100%\" height=\"60%\" src={this.props.img.url} />\n          </div>\n          <div id=\"apod-text\" className=\"col\">\n            <h1 id=\"apod-title\">{this.props.img.title}</h1>\n            <article>{this.props.img.explanation}</article>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nclass Asteroid extends Component {\n  render() {\n    var str = \"\";\n    var is_precent = 0.3;\n    if (this.props.asteriod.is_hazardous) {\n      str = \"Yes\";\n      is_precent = 0.8;\n    } else {\n      str = \"No\";\n    }\n\n    var dia_precent =\n      (this.props.asteriod.estimated_diameter_max -\n        this.props.asteriod.min_diameter +\n        0.01) /\n      (this.props.asteriod.max_diameter - this.props.asteriod.min_diameter);\n\n    var dis_percent =\n      1 -\n      (this.props.asteriod.miss_distance - this.props.asteriod.min_dis) /\n        (this.props.asteriod.max_dis - this.props.asteriod.min_dis);\n\n    var tdStyle = {\n      background: \"RGB(0,255,255,\" + dia_precent + \")\"\n    };\n\n    var isStyle = {\n      background: \"RGB(255,0,0,\" + is_precent + \")\"\n    };\n\n    var disStyle = {\n      background: \"RGB(255,0,255,\" + dis_percent + \")\"\n    };\n\n    return (\n      <tr key={this.props.asteriod.name}>\n        <td>{this.props.asteriod.date}</td>\n        <td>{this.props.asteriod.name}</td>\n        <td style={tdStyle}>{this.props.asteriod.estimated_diameter_max}</td>\n        <td style={disStyle}>{this.props.asteriod.miss_distance}</td>\n        <td style={isStyle}>{str}</td>\n      </tr>\n    );\n  }\n}\n\nvar diameter_max = 0;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOfMovies: [],\n      selectedMovie: null,\n      listOfAsteroids: [],\n      selectedAsteroids: null,\n      imgURL: \"\",\n      apodss: null,\n      type: \"\",\n      title: \"\",\n      explanation: \"\",\n      max_diameter: 0,\n      min_diameter: 100000000000000,\n      max_dis: 0,\n      min_dis: 100000000000000,\n      logo:\n        \"https://www.nasa.gov/sites/default/files/thumbnails/image/nasa-logo-web-rgb.png\"\n    };\n  }\n\n  componentDidMount() {\n    const url = this.urlForTMDB(\"now_playing\");\n\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    var yyyy = today.getFullYear();\n\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    const baseURL = \"https://api.nasa.gov/planetary/apod?date=\";\n    const api_key = \"api_key=BWwii9sVzbeaMDa4dfvjdvgT5Q30VgEgdyRmibIf\";\n    const imgurl = `${baseURL}${today}&${api_key}`;\n    fetch(imgurl)\n      .then(r => r.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ imgURL: data.url });\n        var apod1 = {\n          url: \"\",\n          type: \"\",\n          title: \"\",\n          explanation: \"\"\n        };\n\n        apod1.url = data.url;\n        apod1.type = data[\"media_type\"];\n        apod1.title = data.title;\n        apod1.explanation = data.explanation;\n        this.setState({ apodss: apod1 });\n        this.setState({ type: data[\"media_type\"] });\n        this.setState({ title: data.title });\n        this.setState({ explanation: data.explanation });\n      });\n\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n    var yyyy = today.getFullYear();\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n\n    var end_day = new Date();\n    end_day.setDate(end_day.getDate() + 6);\n    var edd = String(end_day.getDate()).padStart(2, \"0\");\n    var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n    var eyyyy = end_day.getFullYear();\n    end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n\n    const url_aster_all = this.urlForAsterInfo(today, end_day);\n\n    fetch(url)\n      .then(r => r.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ listOfMovies: data.results });\n      });\n\n    fetch(url_aster_all)\n      .then(r => r.json())\n      .then(data => {\n        var asters = {\n          info: []\n        };\n        var j = 0;\n        while (j < 7) {\n          var end_day = new Date();\n          end_day.setDate(end_day.getDate() + j);\n          var edd = String(end_day.getDate()).padStart(2, \"0\");\n          var emm = String(end_day.getMonth() + 1).padStart(2, \"0\");\n          var eyyyy = end_day.getFullYear();\n          end_day = eyyyy + \"-\" + emm + \"-\" + edd;\n          for (var i in data.near_earth_objects[end_day]) {\n            var item = data.near_earth_objects[end_day][i];\n\n            if (\n              parseFloat(\n                item.estimated_diameter.meters.estimated_diameter_max\n              ) > this.state.max_diameter\n            ) {\n              this.setState({\n                max_diameter: parseFloat(\n                  item.estimated_diameter.meters.estimated_diameter_max\n                )\n              });\n            }\n\n            if (\n              parseFloat(\n                item.estimated_diameter.meters.estimated_diameter_max\n              ) < this.state.min_diameter\n            ) {\n              this.setState({\n                min_diameter: parseFloat(\n                  item.estimated_diameter.meters.estimated_diameter_max\n                )\n              });\n            }\n\n            if (\n              parseFloat(\n                item.close_approach_data[\"0\"].miss_distance.kilometers\n              ) > this.state.max_dis\n            ) {\n              this.setState({\n                max_dis: parseFloat(\n                  item.close_approach_data[\"0\"].miss_distance.kilometers\n                )\n              });\n            }\n\n            if (\n              parseFloat(\n                item.close_approach_data[\"0\"].miss_distance.kilometers\n              ) < this.state.min_dis\n            ) {\n              this.setState({\n                min_dis: parseFloat(\n                  item.close_approach_data[\"0\"].miss_distance.kilometers\n                )\n              });\n            }\n\n            asters.info.push({\n              date: end_day,\n              // name: item.name.substr(1, item.name.length - 2),\n              name: item.name,\n              estimated_diameter_max:\n                item.estimated_diameter.meters.estimated_diameter_max,\n              is_hazardous: item.is_potentially_hazardous_asteroid,\n              close_approach_data: item.close_approach_data,\n              miss_distance:\n                item.close_approach_data[\"0\"].miss_distance.kilometers,\n              max_diameter: 0,\n              min_diameter: 10000000,\n              min_dis: 1000000000,\n              max_dis: 0\n            });\n          }\n          j = j + 1;\n        }\n\n        for (var i in asters.info) {\n          asters.info[i].max_diameter = this.state.max_diameter;\n          asters.info[i].min_diameter = this.state.min_diameter;\n          asters.info[i].min_dis = this.state.min_dis;\n          asters.info[i].max_dis = this.state.max_dis;\n          console.log(asters.info[i]);\n        }\n\n        console.log(asters);\n        console.log(\"max disa\");\n        console.log(window.diameter_max);\n        //console.log(asters.info[item]);\n        //console.log(this.flatten(data[\"near_earth_objects\"]))\n        this.setState({ listOfAsteroids: asters.info });\n      });\n  }\n\n  handlePosterClick = movie => {\n    this.setState({ selectedMovie: movie });\n  };\n  render() {\n    const asteriods = this.state.listOfAsteroids.map(asteriod => {\n      return <Asteroid asteriod={asteriod} />;\n    });\n\n    const apodPass = {\n      url: this.state.imgURL,\n      type: this.state.type,\n      title: this.state.title,\n      explanation: this.state.explanation\n    };\n\n    return (\n      <div className=\"container\">\n        <div id=\"header-logo\">\n          <img\n            id=\"img-background\"\n            src=\"https://apod.nasa.gov/apod/image/2002/CenA_hst1000.jpg\"\n          />\n          <img\n            id=\"img-logo\"\n            src=\"https://www.nasa.gov/sites/default/files/thumbnails/image/nasa-logo-web-rgb.png\"\n          />{\" \"}\n          <span>\n            {\" \"}\n            <Star />\n          </span>\n          <h1 id=\"welcome-text\">\n            Welcome to{\" \"}\n            <span>\n              {\" \"}\n              <Star />\n            </span>\n            <br />\n            Asteroid Infomation Site.\n          </h1>\n          <Star />\n          <h2 id=\"text-line\">___</h2>\n          <h2 id=\"introduction-text\">\n            The website provides information <br />\n            on the asteroids coming in the next 7 days.\n          </h2>\n          <Star />\n        </div>\n\n        <div>\n          <PictureOfDay img={apodPass} />\n        </div>\n        <div className=\"row mb-5\">\n          <div id=\"note-article\" className=\"center\">\n            <article id=\"note\">Click button to sort data</article>\n          </div>\n          <div id=\"buttons\" className=\"col\">\n            <button\n              onClick={this.handleDateClick}\n              className=\"btn btn-secondary\"\n              href=\"#\"\n            >\n              Most Recent\n            </button>\n\n            <button\n              onClick={this.handleMaxDiameterClick}\n              className=\"ml-3 btn btn-secondary\"\n              href=\"#\"\n            >\n              Max Estimated Diameter\n            </button>\n            <button\n              onClick={this.handleMissDisClick}\n              className=\"ml-3 btn btn-secondary\"\n              href=\"#\"\n            >\n              Miss Distance\n            </button>\n            <button\n              onClick={this.handleHazardousClick}\n              className=\"ml-3 btn btn-secondary\"\n              href=\"#\"\n            >\n              Is Hazardous\n            </button>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div id=\"wall\" className=\"table-responsive col center\">\n            <Table\n              className=\"table col center\"\n              id=\"asteriods-list\"\n              bordered\n              variant=\"dark\"\n            >\n              <thead id=\"list-title\">\n                <th>Data Date</th>\n                <th>Asteroid Name</th>\n                <th id=\"th-1\">Max Estimated Diameter (m)</th>\n                <th id=\"th-2\">Miss Distance (km)</th>\n                <th id=\"th-3\">Is Hazardous</th>\n              </thead>\n              <tbody id=\"list-body\">{asteriods}</tbody>\n            </Table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  handleNowPlayingClick = e => {\n    e.preventDefault();\n    const url = this.urlForTMDB(\"now_playing\");\n\n    fetch(url)\n      .then(r => r.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ listOfMovies: data.results });\n        // this.state.listOfMovies = data.results\n      });\n  };\n  handleTopRatedClick = e => {\n    e.preventDefault();\n    const url = this.urlForTMDB(\"top_rated\");\n\n    fetch(url)\n      .then(r => r.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ listOfMovies: data.results });\n        // this.state.listOfMovies = data.results\n      });\n  };\n\n  compareDate(a, b) {\n    // Use toUpperCase() to ignore character casing\n    var comparison;\n    if (a.date > b.date) {\n      comparison = -1;\n    } else {\n      comparison = 1;\n    }\n    return comparison;\n  }\n  handleDateClick = e => {\n    e.preventDefault();\n\n    this.state.listOfAsteroids.sort(this.compareDate);\n\n    //console.log(asters.info[item]);\n    //console.log(this.flatten(data[\"near_earth_objects\"]))\n    this.setState({ listOfAsteroids: this.state.listOfAsteroids });\n  };\n\n  compareHazardous(a, b) {\n    // Use toUpperCase() to ignore character casing\n    var comparison;\n    if (a.is_hazardous > b.is_hazardous) {\n      comparison = -1;\n    } else {\n      comparison = 1;\n    }\n    return comparison;\n  }\n\n  handleHazardousClick = e => {\n    e.preventDefault();\n\n    this.state.listOfAsteroids.sort(this.compareHazardous);\n    this.setState({ listOfAsteroids: this.state.listOfAsteroids });\n  };\n\n  compareMaxDiameter(a, b) {\n    // Use toUpperCase() to ignore character casing\n    const bandA = parseFloat(a.estimated_diameter_max);\n    const bandB = parseFloat(b.estimated_diameter_max);\n\n    let comparison = 0;\n    if (bandA > bandB) {\n      comparison = -1;\n    } else if (bandA < bandB) {\n      comparison = 1;\n    }\n    return comparison;\n  }\n\n  handleMaxDiameterClick = e => {\n    e.preventDefault();\n\n    this.state.listOfAsteroids.sort(this.compareMaxDiameter);\n    this.setState({ listOfAsteroids: this.state.listOfAsteroids });\n  };\n\n  compareMissDis(a, b) {\n    // Use toUpperCase() to ignore character casing\n    const bandA = parseFloat(a.miss_distance);\n    const bandB = parseFloat(b.miss_distance);\n\n    let comparison = 0;\n    if (bandA > bandB) {\n      comparison = 1;\n    } else if (bandA < bandB) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n\n  handleMissDisClick = e => {\n    e.preventDefault();\n\n    this.state.listOfAsteroids.sort(this.compareMissDis);\n\n    this.setState({ listOfAsteroids: this.state.listOfAsteroids });\n  };\n\n  displayImg = data => {\n    if (!data) return;\n    this.setState({ imgURL: data.url });\n    var apod = {\n      url: \"\",\n      type: \"\"\n    };\n    apod.url = data.url;\n    apod.type = data[\"media_type\"];\n    this.setState({ apodss: apod });\n    this.setState({ type: data[\"media_type\"] });\n  };\n\n  getAPOD = () => {\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    var yyyy = today.getFullYear();\n\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    const baseURL = \"https://api.nasa.gov/planetary/apod?date=\";\n    const api_key = \"api_key=BWwii9sVzbeaMDa4dfvjdvgT5Q30VgEgdyRmibIf\";\n    const url = `${baseURL}${today}&${api_key}`;\n    return fetch(url)\n      .then(r => r.json())\n      .then(this.displayImg);\n  };\n\n  urlForTMDB = resource => {\n    const api_key_param = \"api_key=bde024f3eb43f597aafe01ed9c9098c6\";\n    const language_param = \"language=en-US\";\n    const region_param = \"region=US\";\n    const filter_param = \"include_adult=false\";\n    const base_url = `https://api.themoviedb.org/3/movie/${resource}`;\n    const api_url = `${base_url}?${api_key_param}&${language_param}&${region_param}&${filter_param}`;\n    return api_url;\n  };\n\n  urlForAsterInfo = (start_date, end_date) => {\n    const base_url = \"https://api.nasa.gov/neo/rest/v1/feed?\";\n    const api_key = \"api_key=BWwii9sVzbeaMDa4dfvjdvgT5Q30VgEgdyRmibIf\";\n    const api_url = `${base_url}?start_date=${start_date}&end_date=${end_date}&${api_key}`;\n    return api_url;\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}